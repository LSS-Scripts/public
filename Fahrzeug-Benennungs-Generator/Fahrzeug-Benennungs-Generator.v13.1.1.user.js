// ==UserScript==
// @name         Fahrzeug-Benennungs-Generator
// @namespace    http://tampermonkey.net/
// @version      13.1.0
// @description  siehe info
// @author       Masklin
// @match        https://www.leitstellenspiel.de/*
// @grant        GM_addStyle
// @grant        GM_xmlhttpRequest
// @connect      self
// ==/UserScript==

(function() {
    'use strict';

    // ========================================================================
    // 1. STYLES
    // ========================================================================
    GM_addStyle(`
        #ng-modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); z-index: 9999; display: flex; justify-content: center; align-items: center; }
        #ng-modal-content { background-color: #282c34; color: #fff; padding: 20px; border-radius: 8px; width: 800px; max-width: 90%; max-height: 90vh; border: 1px solid #444; display: flex; flex-direction: column; }
        #ng-modal-content h3 { margin-top: 0; border-bottom: 1px solid #555; padding-bottom: 10px; }
        #ng-modal-body { flex-grow: 1; overflow-y: auto; margin-bottom: 15px; padding-right: 10px; }
        #ng-log-area { width: 100%; height: 200px; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px; border: 1px solid #555; border-radius: 4px; padding: 5px; overflow-y: scroll; resize: vertical; margin-top: 10px; }
        #ng-progress-bar-container { width: 100%; background-color: #555; border-radius: 5px; }
        #ng-progress-bar { width: 0%; height: 20px; background-color: #007bff; border-radius: 5px; transition: width 0.2s ease-in-out; }
        #ng-progress-text { text-align: center; margin-top: 5px; font-size: 12px; color: #d4d4d4; }
        #ng-modal-buttons { display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px; flex-wrap: wrap; border-top: 1px solid #555; padding-top: 20px;}
        .ng-modal-btn { padding: 10px 20px; border: none; color: white; border-radius: 5px; cursor: pointer; }
        .btn-start { background-color: #28a745; }
        .btn-warning { background-color: #ffc107; color: black; }
        .btn-close { background-color: #6c757d; }

        .ng-select-all-line { display: flex; align-items: center; margin-bottom: 15px; font-size: 1.1em; border-bottom: 1px solid #555; padding-bottom: 15px; }
        .ng-select-all-line label { flex-grow: 1; cursor: pointer; display: flex; align-items: center; }
        .ng-select-all-line input { margin-right: 15px; width: 18px; height: 18px; }

        .ng-button-grid { display: flex; flex-wrap: wrap; gap: 10px; justify-content: center; }
        .ng-module-btn {
            background-color: #4f545c;
            border: 1px solid #666;
            color: #ddd;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.2s, border-color 0.2s;
            text-align: left;
            flex-basis: calc(33.333% - 10px);
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
        }
        .ng-module-btn:hover { background-color: #616770; border-color: #888; }
        .ng-module-btn.selected {
            background-color: #007bff;
            border-color: #0056b3;
            color: white;
            font-weight: bold;
        }
        .ng-btn-content {
            flex-grow: 1;
        }
        .ng-module-btn .count {
            font-size: 0.85em;
            font-style: italic;
            color: #ccc;
            display: block;
            margin-top: 4px;
        }
        .ng-module-btn.selected .count { color: #e0e0e0; }
    `);

    // ========================================================================
    // 2. ZENTRALE KONFIGURATION & MODUL-DATENBANK
    // ========================================================================
    const BATCH_SIZE = 15;
    const MARKER = '\u200B';

    Array.prototype.random = function() {
        return this[Math.floor(Math.random() * this.length)];
    };

    function joinWithSuffix(base, suffix) {
        if (suffix.startsWith('-')) {
            return `${base}${suffix}`;
        }
        return `${base} ${suffix}`;
    }

    const MODULE_CONFIG = {
        // Module werden im UI alphabetisch nach Namen sortiert
        bergrettung: {
            name: "Bergrettung", emoji: "üèîÔ∏è",
            targetVehicleTypes: { 149: 'GW-Bergrettung (NEF)', 150: 'GW-Bergrettung', 151: 'ELW Bergrettung', 152: 'ATV', 154: 'Schneefahrzeug', 155: 'Anh H√∂henrettung (Bergrettung)', 158: 'GW-H√∂henrettung (Bergrettung)' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Gipfel-", "Gletscher-", "Alpen-", "Fels-", "Schnee-", "Eis-", "Gams-", "Stein-", "H√∂hen-", "Lawinen-", "Grat-", "Alm-"];
                const adjektive = ["Eisiger", "Steiler", "Schroffer", "Standfester", "Mutiger", "Schneidiger", "Alpiner", "Gipfelklarer", "Lawinensicherer", "Abgeh√§rteter", "Erfahrener", "Trittsicherer"];
                const namen = [ "Reinhold Messner", "Luis Trenker", "Hermann Buhl", "Peter Habeler", "Gerlinde Kaltenbrunner", "Hans Kammerlander", "√ñtzi", "Heidi", "Alm-√ñhi", "Yeti", "Gletscher-Geist", "Der Bergdoktor", "Andreas Gabalier", "Steinbock", "Gams", "Murmeltier", "Adler", "Geier", "Bernhardiner", "Alpen-Salamander", "Schneehase", "Steinadler", "Bartgeier", "Alpendohle", "Schneefink", "Kreuzotter", "Apollofalter", "Alpenbock", "Mount Everest", "K2", "Mont Blanc", "Matterhorn", "Zugspitze", "Gro√üglockner", "Eiger-Nordwand", "Dolomiten", "Watzmann", "Himalaya", "Anden", "Rocky Mountains", "Karakorum", "Pamir", "Kaukasus", "Karabiner", "Eispickel", "Steigeisen", "Seilschaft", "Biwak", "Lawine", "Gletscherspalte", "Klettergurt", "Schneeschuh", "Pistenraupe", "Skidoo", "Quad", "Unimog", "Haglund", "Gipfelkreuz", "Bergkristall", "Edelwei√ü", "Enzian", "Almrausch", "Gondel", "Sessellift", "Bergf√ºhrer", "H√ºttenwirt", "Sherpa", "Gipfelst√ºrmer", "Alpinist", "Kletterer", "Wanderer", "Gipfel-Taxi", "Latschenkiefer-Latscher", "Ger√∂ll-Ger√ºmpel", "Wander-Wachtel", "Touristen-Retter", "Alpen-Sherpa", "H√ºttenwirt-Helfer", "Verirrten-Verfolger", "H√∂hen-Krankheit", "Schnee-Schieber", "Gletscher-Gondel", "Steinadler-Shuttle", "Sandalen-Sammler", "Flip-Flop-Finder", "Der letzte Lift", "Jodel-Diplom", "Murmeltier-Murks", "Gamsbart-Gondoliere", "Klettersteig-Klops", "Lawinen-Loser-Lotsendienst", "Ger√∂ll-R√∂mer", "Eis-Kratzer", "Absturz-Assistent", "Bruchharsch-Bezwinger", "Firn-Fahnder", "Schneebrett-Sheriff", "Spalten-Springer", "√úberlebens-√úbersetzer", "H√∂hen-Rettungs-Held", "Anti-Absturz-Einheit", "Gipfel-Gigant", "Fels-Fl√ºsterer", "Eis-Eroberer", "Schnee-Stapfer", "Grat-Wanderer", "Alm-Apostel", "Kraxel-Kommando", "Wand-W√§chter", "Seil-Spezialist", "Haken-Held", "Pickel-Pionier", "Steig-Eisen-Stratege", "Biwak-Bataillon", "Spalten-Schreck", "Gurt-Gott", "Pisten-Polizei", "Kristall-Kurier", "Edelwei√ü-Express", "Enzian-Einsatz", "H√ºtten-Helfer", "Sherpa-Shuttle", "Gipfel-G√§mse", "Gletscher-Goliath", "Fels-Fundament", "Eis-Titan", "Schnee-Sturm", "Alpen-Apostel", "Berg-Bulle", "Grat-Gigant", "Wand-W√ºterich", "Kletter-K√∂nig", "Seil-Souver√§n", "Haken-Halbgott", "Pickel-Prinz", "Steig-Star", "Biwak-Boss", "Spalten-Spezi", "Gurt-Genie", "Pisten-Pate", "Kristall-Kaiser", "Edelwei√ü-Elite", "Enzian-Eroberer", "H√ºtten-H√ºne", "Sherpa-Star", "Gipfel-General", "Gletscher-Gebieter", "Fels-F√ºrst", "Eis-Imperator", "Schnee-Sultan", "Alpen-Admiral", "Berg-Baron", "Grat-Gebieter", "Wand-Warlord", "Kletter-Kaiser", "Seil-Sultan", "Haken-Herrscher", "Pickel-Papst", "Steig-Souver√§n", "Biwak-Baron", "Spalten-Stratege", "Gurt-Gigant", "Pisten-Pr√§sident", "Kristall-K√∂nig", "Edelwei√ü-Emir", "Enzian-Experte", "H√ºtten-H√§uptling", "Sherpa-Scheich", "Alpen-Chaot", "Berg-Berserker", "Gipfel-Geist", "Gletscher-Gigant", "Fels-Fanatiker", "Eis-Elefant", "Schnee-Schamane", "Grat-Guerilla", "Wand-Wahnsinniger", "Kletter-Kamikaze", "Seil-Samurai", "Haken-Haudegen", "Pickel-Pirat", "Steig-Stratege", "Biwak-Biest", "Spalten-Schl√§chter", "Gurt-Guru", "Pisten-Pirat", "Kristall-Krieger", "Edelwei√ü-Ehrenmann", "Enzian-Entdecker", "H√ºtten-Held", "Sherpa-Spezialist", "Gipfel-Gladiator", "Gletscher-Krieger", "Fels-Folterer", "Eis-Eremit", "Schnee-Schl√§chter", "Alpen-Ass", "Berg-Bestie", "Grat-Gott", "Wand-Wunder", "Kletter-Koryph√§e", "Seil-Savant", "Haken-Heiland", "Pickel-Professor", "Steig-Sensei", "Biwak-B√ºffel", "Spalten-Serpent", "Gurt-General", "Pisten-Phantom" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        betreuung: {
            name: "Feldk√ºche", emoji: "üç≤",
            targetVehicleTypes: { 130: 'GW-Bt', 131: 'Bt-Kombi', 132: 'FKH', 133: 'Bt LKW', 138: 'GW-Verpflegung', 139: 'GW-K√ºche', 140: 'MTW-Verpflegung', 141: 'FKH', 142: 'AB-K√ºche' },
            nameGenerator: function(isLarge = false) {
                const gerichte = [ { name: "Aal Gr√ºn", gender: "m" }, { name: "Aalsuppe", gender: "f" }, { name: "Adana Kebab", gender: "m" }, { name: "Ahi-Thunfisch-Steak", gender: "n" }, { name: "Ajvar", gender: "n" }, { name: "Allg√§uer K√§sspatzen", gender: "p" }, { name: "Amerikaner", gender: "p" }, { name: "Apfel im Schlafrock", gender: "m" }, { name: "Apfelmus", gender: "n" }, { name: "Apfelpfannkuchen", gender: "m" }, { name: "Apfelstrudel", gender: "m" }, { name: "Arme Ritter", gender: "p" }, { name: "Arrabiata", gender: "f" }, { name: "Artischocke", gender: "f" }, { name: "Asiatische Nudelpfanne", gender: "f" }, { name: "Aspik", gender: "n" }, { name: "Aubergine", gender: "f" }, { name: "Auflauf", gender: "m" }, { name: "Austern", gender: "p" }, { name: "Baba Ghanoush", gender: "n" }, { name: "Backfisch", gender: "m" }, { name: "Backkartoffel", gender: "f" }, { name: "Bacon Bomb", gender: "f" }, { name: "Baguette", gender: "n" }, { name: "Bami Goreng", gender: "n" }, { name: "Bananenbrot", gender: "n" }, { name: "B√§rlauchsuppe", gender: "f" }, { name: "Bauernfr√ºhst√ºck", gender: "n" }, { name: "Bayerischer Wurstsalat", gender: "m" }, { name: "Beef Brisket", gender: "n" }, { name: "Beef Wellington", gender: "n" }, { name: "Beignet", gender: "m" }, { name: "Berliner", gender: "p" }, { name: "Bienenstich", gender: "m" }, { name: "Bigos", gender: "n" }, { name: "Birnen, Bohnen und Speck", gender: "p" }, { name: "Bismarckhering", gender: "m" }, { name: "Blini", gender: "p" }, { name: "Blumenkohl", gender: "m" }, { name: "Blutwurst", gender: "f" }, { name: "Bockwurst", gender: "f" }, { name: "Boeuf Bourguignon", gender: "n" }, { name: "Bohneneintopf", gender: "m" }, { name: "Bolognese", gender: "f" }, { name: "Borscht", gender: "m" }, { name: "Bouillabaisse", gender: "f" }, { name: "Bratapfel", gender: "m" }, { name: "Bratenso√üe", gender: "f" }, { name: "Bratkartoffeln", gender: "p" }, { name: "Bratwurst", gender: "f" }, { name: "Brezel", gender: "f" }, { name: "Brokkoli", gender: "m" }, { name: "Brownie", gender: "m" }, { name: "Bruschetta", gender: "f" }, { name: "Bulette", gender: "f" }, { name: "Bulgursalat", gender: "m" }, { name: "Burger", gender: "m" }, { name: "Burrito", gender: "m" }, { name: "Butterbrot", gender: "n" }, { name: "Calzone", gender: "f" }, { name: "Cannelloni", gender: "p" }, { name: "Caprese", gender: "f" }, { name: "Carbonara", gender: "f" }, { name: "Cevapcici", gender: "p" }, { name: "Cheesecake", gender: "m" }, { name: "Chicken Nuggets", gender: "p" }, { name: "Chicken Wings", gender: "p" }, { name: "Chili con Carne", gender: "n" }, { name: "Chili sin Carne", gender: "n" }, { name: "Churros", gender: "p" }, { name: "Clubsandwich", gender: "n" }, { name: "Coleslaw", gender: "m" }, { name: "Corn Dog", gender: "m" }, { name: "Couscous", gender: "m" }, { name: "Cr√®me br√ªl√©e", gender: "f" }, { name: "Crepes", gender: "p" }, { name: "Crostini", gender: "p" }, { name: "Crumble", gender: "m" }, { name: "Currywurst", gender: "f" }, { name: "Dal", gender: "n" }, { name: "Dampfnudel", gender: "f" }, { name: "D√∂ner Kebab", gender: "m" }, { name: "Donut", gender: "m" }, { name: "D√ºr√ºm", gender: "m" }, { name: "Eier im Glas", gender: "p" }, { name: "Eierkuchen", gender: "m" }, { name: "Eiersalat", gender: "m" }, { name: "Eintopf", gender: "m" }, { name: "Eisbein", gender: "n" }, { name: "Empanada", gender: "f" }, { name: "Enchilada", gender: "f" }, { name: "Erbsensuppe", gender: "f" }, { name: "Erdbeerkuchen", gender: "m" }, { name: "Fajita", gender: "f" }, { name: "Falafel", gender: "p" }, { name: "Falscher Hase", gender: "m" }, { name: "Feuerflecken", gender: "m" }, { name: "Finanztopf", gender: "m" }, { name: "Fish and Chips", gender: "p" }, { name: "Flammkuchen", gender: "m" }, { name: "Frikadelle", gender: "f" }, { name: "Fr√ºhlingsrolle", gender: "f" }, { name: "Gaisburger Marsch", gender: "m" }, { name: "Garnelen", gender: "p" }, { name: "Gazpacho", gender: "f" }, { name: "Gebratene Nudeln", gender: "p" }, { name: "Gefillde", gender: "p" }, { name: "Gem√ºseauflauf", gender: "m" }, { name: "Gem√ºsepfanne", gender: "f" }, { name: "Germkn√∂del", gender: "m" }, { name: "Geschnetzeltes", gender: "n" }, { name: "Gnocchi", gender: "p" }, { name: "Grie√übrei", gender: "m" }, { name: "Grillh√§hnchen", gender: "n" }, { name: "Gr√ºnkohl mit Pinkel", gender: "m" }, { name: "Gulasch", gender: "n" }, { name: "Gulaschkanone", gender: "f" }, { name: "Gurkensalat", gender: "m" }, { name: "Gyros", gender: "n" }, { name: "Hackbraten", gender: "m" }, { name: "H√§hnchencurry", gender: "n" }, { name: "Halloumi", gender: "m" }, { name: "Hamburger", gender: "m" }, { name: "Handk√§se mit Musik", gender: "m" }, { name: "Haxe", gender: "f" }, { name: "Hefeklo√ü", gender: "m" }, { name: "Heringssalat", gender: "m" }, { name: "Himmel un √Ñ√§d", gender: "n" }, { name: "Hot Dog", gender: "m" }, { name: "Hummus", gender: "m" }, { name: "J√§gerschnitzel", gender: "n" }, { name: "Jambalaya", gender: "f" }, { name: "Kaiserschmarrn", gender: "m" }, { name: "K√§sekuchen", gender: "m" }, { name: "K√§sesp√§tzle", gender: "p" }, { name: "Kassler", gender: "n" }, { name: "Kartoffelpuffer", gender: "p" }, { name: "Kartoffelsalat", gender: "m" }, { name: "Kartoffelsuppe", gender: "f" }, { name: "Kebab", gender: "m" }, { name: "K√∂nigsberger Klopse", gender: "p" }, { name: "K√∂ttbullar", gender: "p" }, { name: "Krautwickel", gender: "p" }, { name: "Krapfen", gender: "m" }, { name: "Labskaus", gender: "n" }, { name: "Lahmacun", gender: "f" }, { name: "Lasagne", gender: "f" }, { name: "Leberk√§se", gender: "m" }, { name: "Linseneintopf", gender: "m" }, { name: "Mac and Cheese", gender: "n" }, { name: "Maultaschen", gender: "p" }, { name: "Mettbr√∂tchen", gender: "n" }, { name: "Milchreis", gender: "m" }, { name: "Minestrone", gender: "f" }, { name: "Moussaka", gender: "n" }, { name: "Mozzarella-Sticks", gender: "p" }, { name: "Muffin", gender: "m" }, { name: "Muscheln", gender: "p" }, { name: "Nasi Goreng", gender: "n" }, { name: "Nudelauflauf", gender: "m" }, { name: "Nudelsalat", gender: "m" }, { name: "Obatzda", gender: "m" }, { name: "Ochsenschwanzsuppe", gender: "f" }, { name: "Onion Rings", gender: "p" }, { name: "Pad Thai", gender: "n" }, { name: "Paella", gender: "f" }, { name: "Pannfisch", gender: "m" }, { name: "Panna Cotta", gender: "f" }, { name: "Peking-Ente", gender: "f" }, { name: "Pellkartoffeln mit Quark", gender: "p" }, { name: "Pesto", gender: "n" }, { name: "Pfannkuchen", gender: "m" }, { name: "Pfefferpotthast", gender: "m" }, { name: "Pho", gender: "f" }, { name: "Pichelsteiner", gender: "m" }, { name: "Pierogi", gender: "p" }, { name: "Pita", gender: "f" }, { name: "Pizza", gender: "f" }, { name: "Pizzabr√∂tchen", gender: "p" }, { name: "Polenta", gender: "f" }, { name: "Pommes Frites", gender: "p" }, { name: "Porridge", gender: "n" }, { name: "Pulled Pork", gender: "n" }, { name: "Quesadilla", gender: "f" }, { name: "Quiche", gender: "f" }, { name: "Raclette", gender: "n" }, { name: "Rahmschnitzel", gender: "n" }, { name: "Ramen", gender: "m" }, { name: "Ratatouille", gender: "n" }, { name: "Ravioli", gender: "p" }, { name: "Reibekuchen", gender: "m" }, { name: "Rinderroulade", gender: "f" }, { name: "Risotto", gender: "n" }, { name: "Rollmops", gender: "m" }, { name: "Rote Gr√ºtze", gender: "f" }, { name: "Roulade", gender: "f" }, { name: "R√ºhrei", gender: "n" }, { name: "Samosa", gender: "f" }, { name: "Saumagen", gender: "m" }, { name: "Sauerbraten", gender: "m" }, { name: "Sauerkraut", gender: "n" }, { name: "Schaschlik", gender: "n" }, { name: "Schichtkohl", gender: "m" }, { name: "Schlachtplatte", gender: "f" }, { name: "Schnitzel", gender: "n" }, { name: "Schupfnudeln", gender: "p" }, { name: "Schwarzw√§lder Kirschtorte", gender: "f" }, { name: "Schweinshaxe", gender: "f" }, { name: "Semmelkn√∂del", gender: "m" }, { name: "Senfeier", gender: "p" }, { name: "Serbische Bohnensuppe", gender: "f" }, { name: "Shakshuka", gender: "f" }, { name: "Shepherd's Pie", gender: "m" }, { name: "Soljanka", gender: "f" }, { name: "Sommerrolle", gender: "f" }, { name: "Spaghetti", gender: "p" }, { name: "Spargel", gender: "m" }, { name: "Sp√§tzle", gender: "p" }, { name: "Spiegelei", gender: "n" }, { name: "Spinat", gender: "m" }, { name: "Steak", gender: "n" }, { name: "Strammer Max", gender: "m" }, { name: "Strudel", gender: "m" }, { name: "S√ºlze", gender: "f" }, { name: "Sushi", gender: "n" }, { name: "Taboul√©", gender: "n" }, { name: "Taco", gender: "m" }, { name: "Tafelspitz", gender: "m" }, { name: "Tagliatelle", gender: "p" }, { name: "Tandoori Chicken", gender: "n" }, { name: "Tapas", gender: "p" }, { name: "Tartar", gender: "n" }, { name: "Tarte", gender: "f" }, { name: "Th√ºringer Kl√∂√üe", gender: "p" }, { name: "Tiramisu", gender: "n" }, { name: "Toast Hawaii", gender: "m" }, { name: "Tofu", gender: "m" }, { name: "Tomatensuppe", gender: "f" }, { name: "Tortellini", gender: "p" }, { name: "Tsatsiki", gender: "n" }, { name: "Udon-Nudeln", gender: "p" }, { name: "Vitello Tonnato", gender: "n" }, { name: "Waffel", gender: "f" }, { name: "Wei√üwurst", gender: "f" }, { name: "Westf√§lische Rinderwurst", gender: "f" }, { name: "Wiener Schnitzel", gender: "n" }, { name: "Wirsing", gender: "m" }, { name: "Wurstgulasch", gender: "n" }, { name: "Wurstsalat", gender: "m" }, { name: "Zigeunerschnitzel", gender: "n" }, { name: "Z√ºrcher Geschnetzeltes", gender: "n" }, { name: "Zwiebelkuchen", gender: "m" } ];
                const praefixe = ["Rollende", "Mobile", "Heisse", "Feld-", "Einsatz-", "Taktische", "Herzhafte", "Seelen-", "Wohlf√ºhl-", "Mampf-", "Deftige"];
                const suffixe = ["Bude", "Express", "Grill", "Mobil", "Eck", "H√ºtte", "Kelle", "Pfanne", "Topf", "K√ºche", "Versorgung", "Oase", "Komb√ºse", "Station"];
                const personen = ["Smutje", "K√ºchenchef", "Komb√ºsen-K√∂nig", "Suppen-Kasper", "Grillmeister", "Brutzler", "Feldkoch"];
                const humor = ["Futter-Krippe", "Magen-F√ºller", "Geschmacks-Explosion", "Kalorien-Bomber", "Seelentr√∂ster", "Moral-Heber", "Katerfr√ºhst√ºck", "Nervennahrung"];
                while (true) {
                    const gewaehlterTyp = ['praefix_kombi', 'suffix_kombi', 'tour_kombi', 'heiss_kombi', 'lecker_kombi', 'funktion_kombi'].random();
                    const gericht = gerichte.random();
                    switch (gewaehlterTyp) {
                        case 'praefix_kombi': return `${praefixe.random()} ${gericht.name}`;
                        case 'suffix_kombi': return `${gericht.name}-${suffixe.random()}`;
                        case 'tour_kombi': return `${gericht.name} on Tour`;
                        case 'heiss_kombi': if (gericht.gender === 'p') continue; switch (gericht.gender) { case 'm': return `Hei√üer ${gericht.name}`; case 'f': return `Hei√üe ${gericht.name}`; case 'n': return `Hei√ües ${gericht.name}`; } break;
                        case 'lecker_kombi': if (gericht.gender === 'p') continue; switch (gericht.gender) { case 'm': case 'n': return `Zum leckeren ${gericht.name}`; case 'f': return `Zur leckeren ${gericht.name}`; } break;
                        case 'funktion_kombi': const subTyp = ['person', 'humor'].random(); if (subTyp === 'person') { return `${praefixe.random()} ${personen.random()}`; } else { return `${humor.random()}-${suffixe.random()}`; }
                    }
                }
            }
        },
        feuerwehr: {
            name: "L√∂schfahrzeuge", emoji: "üî•",
            targetVehicleTypes: { 0: 'LF 20', 1: 'LF 10', 6: 'LF 8/6', 7: 'LF 20/16', 8: 'LF 10/6', 9: 'LF 16-TS', 17: 'TLF 2000', 18: 'TLF 3000', 19: 'TLF 8/8', 20: 'TLF 8/18', 21: 'TLF 16/24-Tr', 22: 'TLF 16/25', 23: 'TLF 16/45', 24: 'TLF 20/40', 25: 'TLF 20/40-SL', 26: 'TLF 16', 30: 'HLF 20', 37: 'TSF-W', 84: 'ULF mit L√∂scharm', 86: 'Turbol√∂scher', 87: 'TLF 4000', 88: 'KLF', 89: 'MLF', 90: 'HLF 10', 107: 'LF-L', 121: 'GTLF', 166: 'PTLF 4000', 167: 'SLF' },
            largeVehicleIds: [121, 87, 24, 25],
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Feuer-", "Brand-", "L√∂sch-", "Wasser-", "Hydro-", "Sturm-", "Blitz-", "Donner-", "Glut-", "Inferno-", "Flut-", "H√∂llen-", "Vulkan-", "Magma-", "Asche-", "Pyro-", "Rauch-"];
                const adjektive = ["Roter", "Wilder", "Zorniger", "Rasender", "St√§hlerner", "M√§chtiger", "Br√ºllender", "Nasser", "Mutiger", "Tapferer", "Heldenhafter", "G√∂ttlicher", "Legend√§rer", "Gl√ºhender", "Sengender", "Unbezwingbarer", "Stoischer", "Unaufhaltsamer", "Elementarer", "Donnernder", "Brachialer", "Zischender", "Eiskalter", "Massiver"];
                const namen = [ "Bulle", "B√§r", "Eber", "Drache", "Walross", "Nashorn", "Elefant", "Mammut", "Dachs", "Titan", "Gigant", "Zyklop", "Held", "Goliath", "Thor", "Poseidon", "Krieger", "Barbar", "W√§chter", "Retter", "J√§ger", "Bezwinger", "Hydra", "Cerberus", "Phoenix", "Balrog", "Hephaistos", "Erl√∂ser", "Frontbrecher", "Behemoth", "Moloch", "Leviathan", "Ifrit", "Salamander", "Prometheus", "Vulkan", "Surtr", "Loki", "Agni", "Ra", "Fafnir", "Basilisk", "Hammer", "Amboss", "Klinge", "Speer", "Faust", "Kolben", "Komet", "Meteor", "Gletscher", "Fels", "Bohrer", "Pflug", "Ramme", "Brecher", "Generator", "Reaktor", "Turbine", "Lawine", "Tsunami", "Orkan", "Wellenbrecher", "Hydroschild", "Wasserwerfer", "Monitor", "Strahlrohr", "Halligan-Tool", "Flammpunkt", "Rauchgrenze", "Hitzeschild", "Maschinist", "Atemschutztr√§ger", "Flashover", "Backdraft", "Hohlstrahlrohr", "Zumischer", "Riegelstellung", "Innenangriff", "Rettungsplattform", "Sprungpolster", "Wasser Marsch", "Pyromanen-Schreck", "Grill-Meister", "BMA-Tourist", "Keller-Ausleuchter", "B√§umchen-Bew√§sserer", "Katzen-Retter", "Leiter-Halter", "Schlauch-Salat", "Tat√º-Tata", "Blaulicht-Ballett", "Feuer-Fighter", "Glut-Goliath", "Nasser-Albtraum", "Hei√ümacher", "Durst-L√∂scher", "Party-Pumpe", "Schaum-Schl√§ger", "Asphalt-K√ºhler", "Tankstellen-Tester", "Hydranten-Hengst", "Letzte-√ñlung", "Feuerteufel-Fl√ºsterer", "Rauch-Ramme", "Wasser-Verschwender", "Grill-Aufsicht", "Wasserrechnungs-Treiber", "M√ºlleimerbrand-Spezialist", "Funken-F√§nger", "Z√ºnd-Zerst√∂rer", "Hitze-Held", "Flammen-Fresser", "Glut-Garant", "Asche-Artist", "Ru√ü-Ritter", "Qualm-Qu√§lgeist", "Brand-Baron", "L√∂sch-Lord", "Feuer-Wall", "Flammen-Woge", "Wasser-Wand", "Glut-H√∂lle", "Asche-Regen", "Rauch-Schwade", "Brand-Bestie", "Feuer-Orkan", "Flammen-Tsunami", "Wasser-Gewalt", "Glut-Sturm", "Asche-Sturm", "Rauch-Bestie", "Brand-Drache", "Feuer-Hydra", "Flammen-Cerberus", "Wasser-Titan", "Glut-Gigant", "Wasserb√ºffel", "Roter Blitz", "Schaumkanone", "Glutvernichter 3000", "Sirenenpony", "Flammenfresser", "Drehmomentl√∂schi", "Rauchschlucker", "Blaulicht-Bomber", "Hydrantenfreund", "L√∂schinator", "Feuerwehr-Banane", "Schlauchmaster", "Hitzehammer", "L√∂schexpress", "Pumpenk√∂nig", "Roter Riese", "Funkenschreck", "Feuerknutscher", "Schaumr√ºssel", "Rauchradler", "Glutbuster", "L√∂schlegende", "Wasserwalze", "Schaumwalze", "Roter Panda", "Blaulicht-Komet", "Brandbremser", "Funkenfresser", "HLFie", "Flammenj√§ger", "Wolkenmacher", "K√ºbelspritze Deluxe", "Wasserdompteur", "Druckluftheld", "Schaumgeist", "L√∂sch-Limo", "Sirenenkutsche", "Feuerb√§ndiger", "HLF-Hulk", "Glutj√§ger", "Wasserkutsche", "Rauchknacker", "Schlauchschlepper", "L√∂schtaxi", "Gischtgeschoss", "Roter Rambock", "Hydrantenschreck", "Funkenf√§nger", "Schaumgigant", "Wasserdrache", "Hitzehorst", "Blaulicht-Bolide", "Feuerflitzer", "Flammenhobel", "Brandblocker", "Pumpinator", "Feuerwehr-Ferrari", "L√∂sch-Kutter", "Rauchrocker" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                let baseName = patterns.random()();
                if (isLarge) { baseName = joinWithSuffix(baseName, ["Gigant", "Koloss", "Titan", "Goliath", "Leviathan"].random()); }
                return baseName;
            }
        },
        fuehrung: {
            name: "Chef-Kutschen", emoji: "üëë",
            targetVehicleTypes: { 3: 'ELW 1', 34: 'ELW 2', 55: 'KdoW-LNA', 56: 'KdoW-OrgL', 35: 'leBefKw', 128: 'ELW Drohne', 129: 'ELW2 Drohne', 144: 'F√ºKW (THW)', 145: 'F√ºKomKW', 146: 'Anh F√ºLa', 147: 'FmKW', 148: 'MTW-FGr K', 51: 'F√ºKW (Polizei)', 103: 'FuStW (DGL)', 78: 'AB-Einsatzleitung', 59: 'ELW 1 (SEG)' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Chef-", "Einsatzleiter-", "Alpha-", "Kommando-", "Lagezentrum-", "Strategie-", "Master-", "Ober-", "Haupt-", "Krisenstab-", "Taktik-", "Stabs-", "Kontroll-", "Pr√§sidial-", "Generalstabs-"];
                const adjektive = ["Leitender", "Dominanter", "Entscheidender", "Souver√§ner", "Wichtiger", "Finaler", "Strategischer", "Taktischer", "Autorit√§rer", "Unumst√∂√ülicher", "Befehlender", "Delegierender", "Charismatischer", "B√ºrokratischer", "Vision√§rer"];
                const namen = [ "H√§uptling", "General", "Direktor", "Boss", "Pate", "Meister", "Stratege", "Koordinator", "Platzhirsch", "Alphatier", "Big-Boss", "Kuttentr√§ger", "Pr√§sident", "Imperator", "Kanzler", "Senator", "Admiral", "Befehlshaber", "Vorstand", "CEO", "Aufsichtsrat", "Feldmarschall", "Patriarch", "Magnat", "Strippenzieher", "Dirigent", "Zeremonienmeister", "Caesar", "Napoleon", "Sun Tzu", "K√∂nig", "Bauer", "L√§ufer", "Springer", "Turm", "Dame", "Rochade", "Gambit", "Masterplan", "Direktive", "Lagekarte", "F√ºhrungsstab", "Kommando-Br√ºcke", "Machtwort", "Veto", "Organigramm", "Mastermind-Mobil", "Schachzug", "Exekutivebene", "Eskalationsstufe", "SWOT-Analyse", "Debriefing", "Befehlskette", "Meldekopf", "Task-Force", "Synergy", "Paradigm Shift", "Low-Hanging Fruit", "Game Changer", "Think Tank", "Kaffee-Beauftragter", "Plan-Macher", "Entscheider", "Taktikfuchs", "Kaffee-Stratege", "Meeting-Meister", "Presse-Sprecher", "Westentaschen-General", "Excel-Tabellen-F√ºrst", "PowerPoint-Pirat", "Dienstwagen-Don", "Bullshit-Bingo-Bus", "Wichtigtuer-Wagen", "Krisen-Kaffee-Kurier", "Zust√§ndigkeits-Zirkus", "Synergie-Shuttle", "Stakeholder-Mobil", "Wichtiger-Willi", "Zust√§ndigkeits-Verschieber", "Meeting-Marathon-Mobil", "PowerPoint-Prinz", "Koryph√§e", "Eminenz", "Entscheidungs-Delegierer", "Meeting-Einberufer", "Kaffee-ist-keine-Strategie" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        hunde: {
            name: "Sp√ºrnasen", emoji: "üêï",
            targetVehicleTypes: { 91: 'Rettungshundefahrzeug', 92: 'Anh Hund', 94: 'DHuF√ºKW', 153: 'Hundestaffel (Bergrettung)' },
            largeVehicleIds: [153],
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Sp√ºrnasen-", "F√§hrten-", "Rettungs-", "Leckerli-", "Bello-", "Wuff-", "K-9-", "Hunde-", "Fellnasen-", "Pfoten-", "Knochen-"];
                const adjektive = ["Treuer", "Wachsamer", "Lauter", "Feiner", "Spitzfindiger", "Mutiger", "Verfressener", "Verspielter", "Heldenhafter", "Unbestechlicher", "Sabbernder", "Loyaler"];
                const substantive_hunde = ["Partner", "Kollege", "W√§chter", "Sp√ºrnase", "F√§hrtensucher", "Retter", "Held", "Besch√ºtzer", "Ermittler", "Bei√üer", "Kl√§ffer", "Helfer auf 4 Pfoten"];
                const namen = [ "Kommissar Rex", "Lassie", "Rin Tin Tin", "Toto", "Pluto", "Goofy", "Snoopy", "Beethoven", "Hachiko", "Balto", "Cerberus", "Scooby-Doo", "Struppi", "Idefix", "Barry", "Buddy", "Chase", "Marshall", "Rocky", "Rubble", "Skye", "Zuma", "Everest", "Tracker", "Bolt", "Dug", "Pongo", "Perdita", "Slinky", "Santa's Little Helper", "Brian Griffin", "Chance", "Shadow", "Milo", "Otis", "Copper", "Fang", "Max", "Gromit", "Odie", "Spike", "Tyke", "Droopy", "Huckleberry Hound", "Augie Doggie", "Muttley", "Scrappy-Doo", "Marmaduke", "Underdog", "Clifford", "Blue", "Lady", "Tramp", "Jock", "Trusty", "Porky", "Rowlf", "Einstein", "Brutus", "Zero", "Winston", "Buck", "Marley", "Sam", "Benji", "Sch√§ferhund", "Malinois", "Rottweiler", "Bernhardiner", "Golden Retriever", "Labrador", "Sp√ºrhund", "Bluthund", "Dobermann", "Dalmatiner", "Beagle", "Border Collie", "Dackel", "Husky", "Terrier", "Dogge", "Mastiff", "Schnauzer", "Boxer", "Akita", "Jack Russell", "Laika", "Greywind", "Nymeria", "Shaggydog", "Fass", "Platz", "Sitz", "Apport", "Such", "Bleib", "Hier", "Fein", "Gib Laut", "Voran", "Aus", "Fu√ü", "Hopp", "Bring", "Steh", "Down", "Such und Hilf", "Revier", "Verbellen", "Leckerli-Bomber", "Bello-Mobil", "Sp√ºrnasen-Express", "F√§hrten-Ferkel", "K-9-Kutsche", "Gebell-Gruppe", "Sabber-Shuttle", "Tatort-Taz", "Wadenbei√üer-Wagen", "Fell-Geschoss", "Alarm auf 4 Pfoten", "Der nasse Stupser", "Knochen-J√§ger", "Postboten-Schreck", "Keksdieb-Kommando", "Anti-Katzen-Kommando", "Sofawolf-Shuttle", "Haufen-Finder", "Buddel-Bataillon", "Streichel-Einheit", "Quietsche-Tier-Vernichter", "Sabber-Spezialist", "Futterneid-Flotte", "St√∂ckchen-Such-Service", "Platz-Polizei", "Sitz-Streife", "B√§llchen-Junkie", "Fehlalarm-Fifi", "Reste-Vertilger", "Lausch-Angriff", "Chaos-Charly", "Pf√ºtzen-Pr√ºfer", "Schuh-Sortierer", "F√§hrten-Vernichter", "Bett-Besetzer" ];
                if (isLarge) {
                    const alpin_praefixe = ["Alpen-", "Gletscher-", "Lawinen-", "Gipfel-", "Firn-", "Ger√∂ll-", "Schnee-"];
                    const alpin_adjektive = ["Trittsicherer", "Schneefester", "Alpiner", "K√§lte-resistenter"];
                    const alpin_namen = ["Lawinen-Wuff", "Alpen-Bello", "Gipfel-Kl√§ffer", "Schnee-Schnauze", "Ger√∂ll-Retriever", "Yeti-J√§ger", "Murmeltier-Melder", "Firn-Finder", "Barry der Held", "Heidi's Held", "Alm-Aportierer"];
                    const hybrid_patterns = [ () => alpin_namen.random(), () => { const name = substantive_hunde.random(); if (name.includes(' ')) return name; return `${alpin_praefixe.random()}${name}`; }, () => `${alpin_adjektive.random()} ${substantive_hunde.random()}`, () => `${alpin_adjektive.random()} ${namen.random()}` ];
                    return hybrid_patterns.random()();
                } else {
                    const patterns = [ () => namen.random(), () => `${adjektive.random()} ${substantive_hunde.random()}`, () => { const name = substantive_hunde.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                    return patterns.random()();
                }
            }
        },
        luftrettung: {
            name: "Luftrettung", emoji: "üöÅ",
            targetVehicleTypes: { 31: 'RTH', 61: 'Polizeihubschrauber', 156: 'Polizeihubschrauber mit verbauter Winde', 157: 'RTH Winde', 161: 'Hubschrauber (Seenotrettung)', 96: 'Au√üenlastbeh√§lter (allgemein)' },
            largeVehicleIds: [96],
            nameGenerator: function(isLarge = false) {
                if (isLarge) {
                    const praefixe = ["L√∂sch-", "Wasser-", "Waldbrand-", "Fl√§chenbrand-", "Feuer-", "Regen-", "Wolken-", "Sturz-", "Bomben-"];
                    const adjektive = ["Nasser", "Schwerer", "Pl√∂tzlicher", "K√ºhlender", "Entscheidender", "Punktgenauer", "Gro√üfl√§chiger"];
                    const namen = ["Bomber", "Regenmacher", "Wolkenbruch", "Monsun", "Sintflut", "Tsunami", "Wasserfall", "Katarakt", "Sturzbach", "Guss", "Schauer", "Niederschlag", "Font√§ne", "Geysir", "Cloudbuster", "Fire-Bomber", "Water-Bomber", "L√∂sch-Ei", "Regen-Tanz", "Neptuns-Zorn", "Poseidons-Rache", "Thor's-Dusche", "Wald-Tr√§nke", "Glut-L√∂scher", "Asche-Binder", "Rauch-Dr√ºcker", "Flammen-Tod", "Feuer-Ex", "Letzte-√ñlung", "Der-gro√üe-Durstl√∂scher"];
                    const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                    return patterns.random()();
                } else {
                    const praefixe = ["Himmels-", "Luft-", "Wolken-", "Rotor-", "Turbinen-", "G√∂tter-", "Engels-", "Sturm-", "Alpen-", "Aero-", "Gipfel-", "Senkrecht-"];
                    const adjektive = ["Fliegender", "Schwebender", "Schneller", "G√∂ttlicher", "Himmlischer", "St√§hlerner", "Alleehender", "Donnernder", "Windiger", "Kreisender", "Steigender", "Majest√§tischer"];
                    const namen = [ "Adler", "Falke", "Bussard", "Kondor", "Greif", "Albatros", "Ikarus", "Pegasus", "Valkyrie", "Garuda", "Erzengel", "Schutzengel", "Himmelsbote", "Retter", "Horus", "Hermes", "Gerfalke", "Milan", "Sturmvogel", "Roch", "Zeus", "Thor", "Simurgh", "Ziz", "Auge", "Winde", "Klinge", "Wirbelsturm", "Himmels-Auge", "Rotorblatt", "Thermik", "Gipfelst√ºrmer", "Senkrechtstarter", "Aufwind", "F√∂hn", "Jetstream", "Cumulonimbus", "Pilot", "Windenoperator", "Bell UH-1D", "Eurocopter", "Bo 105", "Airbus H145", "Black Hawk", "Apache", "Chinook", "Luft-Taxi", "Propeller-Prinz", "Knatter-Kiste", "Himmels-Fahrstuhl", "Thermik-Tester", "Ventilator-Deluxe", "Teuerstes-Taxi", "Libellen-Lord", "Hummel-Heli", "Br√∂tchen-Holer", "H√∂hen-Rausch", "Kerosin-Vernichter", "H√∂hen-Luft-Schnapper", "Adler-Attrappe", "Rotierende-Rettung", "Lawinen-Gucker", "Stau-Uinflieger", "Dach-Landeplatz-Sucher", "Vogel-Schreck", "Wind-Macher" ];
                    const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                    return patterns.random()();
                }
            }
        },
        pferde: {
            name: "H√º-Hott-Express", emoji: "üêé",
            targetVehicleTypes: { 134: 'Pferdetransporter klein', 135: 'Pferdetransporter gro√ü', 136: 'Anh Pferdetransport', 137: 'Zugfahrzeug Pferdetransport' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Huf-", "Galopp-", "Reiter-", "Kavallerie-", "Stall-", "Koppel-", "Heu-", "Hafer-", "Sattel-", "Striegel-", "Pferdest√§rken-"];
                const adjektive = ["Stolzer", "Edler", "Wilder", "Schnaubender", "Trotziger", "Sanfter", "Anmutiger", "Ungez√§hmter", "K√∂niglicher", "Schwerer", "Galoppierender", "Wiehernder"];
                const namen = [ "Fury", "Black Beauty", "Jolly Jumper", "Sleipnir", "Bucephalus", "Schattenfell", "Rocinante", "Seabiscuit", "Secretariat", "Hidalgo", "Pegasus", "Kleiner Onkel", "B√ºrger", "Amigo", "Tornado", "Zorro", "Silver", "Trigger", "Champion", "Maximus", "Samson", "Philippe", "Khan", "Angus", "Bullseye", "Spirit", "Rain", "Artax", "Flicka", "Gunpowder", "Goliath", "Incitatus", "Marengo", "Copenhagen", "Comanche", "Traveler", "Cincinnati", "Alcatraz", "Balthasar", "Ferdinand", "Valegro", "Totilas", "Donnerhall", "Ratina Z", "Milton", "Hickstead", "Shutterfly", "For Pleasure", "Goldfever", "Gigolo", "Satchmo", "Bonfire", "Ahlerich", "Rembrandt", "Meteor", "Abdullah", "Salinero", "Cornet Obolensky", "Casall", "Chacco-Blue", "Brego", "Arod", "Hasufel", "Roheryn", "Snowmane", "Windfola", "Blackie", "Sefton", "Sergeant Reckless", "Haflinger", "Friese", "Andalusier", "Shire Horse", "Mustang", "Araber", "Lipizzaner", "Kaltblut", "Warmblut", "Vollblut", "Pinto", "Appaloosa", "Quarter Horse", "Paint Horse", "Tinker", "Noriker", "Percheron", "Holsteiner", "Hannoveraner", "Oldenburger", "Westfale", "Trakehner", "Fjordpferd", "Isl√§nder", "Hufschlag", "Galopp", "Trab", "Sattel", "Zaumzeug", "Pferdest√§rke", "Kutsche", "Kavallerie", "Hafer-Moped", "Sheriff's-Mustang", "Heu-Transporter", "Stall-Geruch", "Laser-Pony", "Ein-PS-Einsatz", "Wiehernder-Wachtmeister", "Apfelschimmel-Alarm", "Einsatz-Einhorn", "Zuckerw√ºrfel-Zerst√∂rer", "M√∂hren-Mafia", "Galoppierende-Gesetzeslage", "Trab-Titan", "Sattel-Sheriff", "Der Amtsschimmel", "Kaltblut-Kommando", "Vollblut-Vollstrecker", "Huf-Hooligan", "Striegel-Streife", "Fliegende M√§hne", "Gras-Antrieb", "Bio-Bulle", "Das letzte Einhorn", "Vierhufer-Vortrupp", "Heu-Highway-Patrol", "Koppel-Cop", "√Ñppel-Produzent", "Fliegen-Schreck", "Staub-Aufwirbler", "Hindernis-Hasser", "Karotten-Kurier", "Panik-Pferd", "Gem√ºse-Vernichter", "Hengst", "Rappe", "Schimmel", "Fuchs", "Wallach", "Streitross", "Husar", "Ulan", "Dragoner", "K√ºrassier", "Zentaur", "Gaul" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        polizei: {
            name: "Freund & Helfer", emoji: "üöì",
            targetVehicleTypes: { 32: 'FuStW', 95: 'Polizeimotorrad', 50: 'GruKw', 52: 'GefKw', 98: 'Zivilstreifenwagen' },
            largeVehicleIds: [52, 50],
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Streifen-", "Einsatz-", "Alarm-", "Zivil-", "Sonder-", "Verfolgungs-", "Fahndungs-", "Razzia-", "Blaulicht-", "Beweis-", "Zugriffs-", "Observierungs-", "Protokoll-", "Paragraphen-", "Sicherungs-", "Abschnitts-", "Kripo-", "Soko-"];
                const adjektive = ["Strenger", "Wachsamer", "Schneller", "Unbestechlicher", "Eiserner", "Gesetzestreuer", "M√ºder", "Harter", "Cooler", "Kompromissloser", "Unerbittlicher", "Hartn√§ckiger", "Pr√§ziser", "Observierender", "Schlafloser", "B√ºrokratischer", "Unnachgiebiger", "Verdeckter", "Ermittelnder"];
                const namen = [ "Gesetzesh√ºter", "Wachtmeister", "Kommissar", "Ermittler", "Sheriff", "Richter", "Ordnungsh√ºter", "Fahnder", "Detektiv", "Sp√ºrhund", "Adlerauge", "Inspektor", "Marshall", "Vollstrecker", "W√§chter", "Kopfgeldj√§ger", "Sp√ºrfuchs", "Wachhund", "Bluthund", "Habicht", "Hauptmeister", "Zivilfahnder", "Asphalt-Cowboy", "Profiler", "Schatten", "Ermittlungsrichter", "Staatsanwalt", "Kriminaltechniker", "Haftbefehl", "Alibi", "Protokoll", "Indiz", "Ermittlungsakte", "Rapport", "Zeugenaussage", "T√§terprofil", "Gerechtigkeit", "Ordnung", "Gesetz", "Pr√§vention", "Strafprozessordnung", "Eilverfahren", "Platzverweis", "Diebstahl", "Betrug", "N√∂tigung", "Zeugenvernehmung", "Funkdisziplin", "Lagebild", "Schutzweste", "Bodycam", "Radarpistole", "Alkomat", "Spurensicherungskoffer", "Strafantrag", "Sicherstellung", "Personalienfeststellung", "Donut-Vernichter", "Kaffee-Kocher", "Strafzettel-Baron", "Kn√∂llchen-K√∂nig", "Akten-Schlepper", "Kaffee-Junkie", "Donut-Inspektor", "Feierabend-J√§ger", "Blitzer-Baron", "Krapfen-Kommando", "Schicht-Schieber", "Verkehrs-S√ºnder-Schreck", "Dienst-nach-Vorschrift-Mobil", "Berufsverkehr-Bremser", "Paragraphen-Pirat", "B√ºrokratie-Beschleuniger", "Falschparker-Feind", "G√§hn-Geselle", "Warte-Wachtmeister", "Notizblock-Nervens√§ge", "Freund und Helfer", "Verwarnungs-Verteiler", "M√§ngel-Melder", "Streber-Streife", "Amtsm√ºder Augenzeuge", "Protokoll-Poet", "Donut-Dynamo", "Schicht-Ende-Sehnsucht", "Kaffee-Kommando", "Ordnungs-Macht", "Rechts-Staat", "Schutz-Schild", "Sicherheits-Garant", "Pr√§senz-Profi", "Streifen-Stratege", "Einsatz-Experte", "Sherlock Holmes", "Dr. Watson", "Hercule Poirot", "Miss Marple", "Philip Marlowe", "Sam Spade", "Columbo", "Kojak", "Derrick", "Schimanski", "Bulle von T√∂lz", "Tatort-Reiniger", "CSI", "NCIS", "FBI", "BKA", "LKA", "Interpol" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                let baseName = patterns.random()();
                if (isLarge) { baseName = `${baseName} ${["(Transport)", "(Schwerlast)", "(Zellenblock)", "(Mannschaft)"].random()}`; }
                return baseName;
            }
        },
        rettung: {
            name: "Blaulicht-Taxis", emoji: "üöë",
            targetVehicleTypes: { 28: 'RTW', 73: 'GRTW', 29: 'NEF', 74: 'NAW', 38: 'KTW', 58: 'KTW Typ B', 97: 'ITW', 60: 'GW-San' },
            largeVehicleIds: [73, 60],
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Notfall-", "Rettungs-", "Pflaster-", "Pillen-", "Blaulicht-", "Kaffee-", "Herz-", "Klinik-", "Intensiv-", "Trauma-", "EKG-", "Defi-", "Adrenalin-", "Lebens-", "Aua-"];
                const adjektive = ["Schneller", "Eiliger", "M√ºder", "Geduldiger", "Piepsender", "Desinfizierter", "Lebensrettender", "Stabiler", "Ruhiger", "Hektischer", "Pulsierender", "Steriler", "Diagnostischer", "Beruhigender"];
                const namen = [ "Samariter", "Lebensretter", "Schutzengel", "Notarzt", "Sanit√§ter", "Ersthelfer", "Chirurg", "An√§sthesist", "Erstversorger", "Schutzpatron", "Wei√üer Ritter", "Desinfektor", "Seelentr√∂ster", "Florence Nightingale", "Robert Koch", "Ignaz Semmelweis", "Puls", "Trauma-Team", "Diagnose", "Lebensfunke", "Hoffnung", "Zweite-Chance", "Adrenalin-Sto√ü", "Infusion", "Venenkatheter", "Herzkammer", "Aorta", "Sinusknoten", "Stethoskop", "Blutdruck-Manager", "EKG-Schreiber", "Defibrillator", "Atropin", "Intubation", "Thoraxdrainage", "Glukose", "Schockraum", "Intensivstation", "Vakuummatratze", "Schaufeltrage", "Anaphylaxie", "Pillen-Taxi", "Aua-Wagen", "Schnupfen-Express", "Blaulicht-Bote", "Herzensbrecher", "Schock-Therapeut", "Kaffee-Kurier", "Pulsschubser", "Husten-Taxi", "M√§nner-Schnupfen-Mobil", "Jammer-Lappen-J√§ger", "Wehwehchen-Wagen", "Hypochonder-Heiland", "Bettenschubser", "Asphalt-Ambulanz", "Heftpflaster-Held", "Kaffee-Infusion", "Legebatterie", "Simulanten-Scanner", "Aspirin-Apostel", "RTW-Chauffeur", "Pflaster-Kleber", "Diagnose-Dilettant", "Simulanten-Schreck", "Husten-Held", "Schnupfen-Sheriff", "Fieber-Fighter", "Kopfweh-Kavalier", "Papierschnitt-Panik", "M√§nnergrippe-M√§rtyrer", "Hypochonder-Hotline", "Placebo-Patrouille", "Krankenschein-Kurier", "Rettungs-Rambo", "Notfall-Nanny", "Blaulicht-Baron" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                let baseName = patterns.random()();
                if (isLarge) { baseName = `${baseName} ${["Klinik-Shuttle", "Maxi-Ambulanz", "Betten-Transporter", "Katastrophen-Helfer"].random()}`; }
                return baseName;
            }
        },
        seenotrettung: {
            name: "Seenotrettung", emoji: "üö¢",
            targetVehicleTypes: { 159: 'Seenotrettungskreuzer', 160: 'Seenotrettungsboot' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["K√ºsten-", "Hochsee-", "Sturm-", "Wellen-", "See-", "Meeres-", "Orkan-", "Hafen-", "Tiden-", "Brandungs-", "Salzwasser-", "Gischt-"];
                const adjektive = ["Salziger", "St√ºrmischer", "Unsinkbarer", "Verwegener", "Rostiger", "Heldenhafter", "Wellenbrechender", "Seet√ºchtiger", "Tapferer", "Standhafter"];
                const namen = [ "Seeb√§r", "Kapit√§n", "Pirat", "Freibeuter", "Klabautermann", "Neptun", "Poseidon", "Hafenmeister", "Leuchtturmw√§rter", "Triton", "√Ñgir", "Ran", "St√∂rtebeker", "Nautilus", "Kolumbus", "Magellan", "Vasco da Gama", "Kraken", "Leviathan", "Moby Dick", "Fliegender Holl√§nder", "Charybdis", "Hydra", "Scylla", "J√∂rmungandr", "Sextant", "Kompass", "Brandung", "Gischt", "Tide", "Welle", "D√ºne", "Boje", "Fender", "Poller", "Kiel", "Takelage", "Sturmflut", "Orkanb√∂e", "Kreuzsee", "Titanic", "Bismarck", "Calypso", "Santa Maria", "Mayflower", "Discovery", "Endeavour", "Victoria", "Gorck Fock", "Passat", "Pamir", "Peking", "Rost-Ritter", "Salzwasser-S√§nfte", "Wellen-Bezwinger", "M√∂wen-Schreck", "Fischkutter-Freund", "Eiserner-Wal", "Nasser-Held", "Hafen-Hirte", "Deich-Defender", "Salzwasser-Seelsorger", "Krabben-Kumpel", "Container-Cop", "Treibgut-Taxi", "Wellen-Wiege", "Orkan-Organisator", "Sturm-Stratege", "Rostlauben-Retter", "M√∂wen-Motel", "Nebel-Navigator", "Kompass-Korrektor", "Albatros", "Kormoran" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        spezialeinheiten: {
            name: "SEK / MEK", emoji: "üíÄ",
            targetVehicleTypes: { 79: 'SEK - ZF', 80: 'SEK - MTF', 81: 'MEK - ZF', 82: 'MEK - MTF', 72: 'WaWe 10' },
            largeVehicleIds: [72],
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Zugriffs-", "Taktik-", "Schatten-", "Sturm-", "Alpha-", "Omega-", "Nacht-", "Kobra-", "Phantom-", "Kommando-", "Delta-", "Zero-", "Stahl-", "Titan-", "Wolfs-"];
                const adjektive = ["Stiller", "Pr√§ziser", "Eiserner", "Scharfer", "Chirurgischer", "Unerbittlicher", "Kompromissloser", "Getarnter", "Gepanzerter", "Lautloser", "Skrupelloser", "Finaler", "Letzter"];
                const namen = [ "J√§ger", "Greifer", "Vollstrecker", "Brecher", "Phantom", "Schatten", "Operator", "Kommando", "Scharfsch√ºtze", "Geist", "Henker", "W√§chter", "Wolf", "Hy√§ne", "Schakal", "Viper", "Kobra", "Cerberus", "Nighthawk", "Valkyrie", "Chim√§re", "Mantikor", "Gorgone", "Hydra", "Spectre", "Reaper", "Pointman", "Breacher", "GSG 9", "SAS", "Spetsnaz", "GIGN", "Navy Seal", "KSK", "Nemesis", "Thanatos", "Ares", "Charon", "Styx", "Hades", "Anubis", "Zugriff", "Observation", "Belagerung", "Sturm", "Sicherung", "Eskorte", "Protokoll-Omega", "Letzte-Instanz", "Vergeltung", "Furcht", "Zugriffs-Korridor", "Observationsteam", "Silent Entry", "Room Clearing", "Projekt Cerberus", "Operation Nachtnebel", "B√∂ser Onkel", "T√ºr-Eintreter", "Verhandlungs-Verweigerer", "Fenster-Gucker", "Pizza-Besteller", "Nachtschattengew√§chs", "Leisetreter", "Ramme-Ramme", "Poltergeist", "Wand-Wackler", "Party-Crasher", "√úberraschungsgast", "Spa√ü-Bremse", "Fenster-Einklatscher", "Adrenalin-Junkie", "Lautlos-Lurker", "Tango-Down-Team", "Schwarze-Witwe", "H√∂llen-Hund", "Stahl-Faust", "Bitte nicht st√∂ren", "Klopfen war gestern", "Nihilist", "Stoiker", "Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot", "Golf", "Hotel", "India", "Juliett", "Kilo", "Lima", "Mike", "November", "Oscar", "Papa", "Quebec", "Romeo", "Sierra", "Tango", "Uniform", "Victor", "Whiskey", "X-Ray", "Yankee", "Zulu" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        technik: {
            name: "Strom-Junkies", emoji: "‚ö°",
            targetVehicleTypes: { 110: 'NEA50', 111: 'NEA50', 112: 'NEA200', 113: 'NEA200', 122: 'LKW 7 Lbw (FGr E)', 171: 'GW TeSi', 172: 'LKW Technik (Notstrom)', 173: 'MTW TeSi', 174: 'Anh TeSi', 175: 'NEA50' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Strom-", "Spannungs-", "Kabel-", "Notstrom-", "Technik-", "Sicherungs-", "Elektronik-", "Werkstatt-", "Licht-", "Phasen-"];
                const adjektive = ["Elektrischer", "Spannungsgeladener", "Funktionierender", "Provisorischer", "Zertifizierter", "Verkabelter", "Leuchtender", "Summender", "Brummender", "Funkenschlagender"];
                const namen = [ "Nikola Tesla", "Thomas Edison", "Georg Ohm", "James Watt", "Michael Faraday", "Alessandro Volta", "Werner von Siemens", "Robert Bosch", "MacGyver", "Daniel D√ºsentrieb", "Artur Fischer", "Q", "Doc Brown", "Volt", "Ampere", "Watt", "Kilowatt", "Megawatt", "Widerstand", "Kondensator", "Transformator", "Kurzschluss", "Spannungsspitze", "Lichtbogen", "Phase", "Nullleiter", "Frequenz", "Gleichstrom", "Wechselstrom", "Starkstrom", "Schraubenschl√ºssel", "L√∂tkolben", "Multimeter", "Oszilloskop", "Werkbank", "Schraubstock", "Kabeltrommel", "Kabelbinder", "L√ºsterklemme", "Phasenpr√ºfer", "Seitenschneider", "Krimpzange", "Abisolierzange", "Steckdose", "Sicherheitsprotokoll", "VDE-Pr√ºfung", "Schaltplan", "Notstromversorgung", "Blackout-Pr√§vention", "Redundanz", "USV-Anlage", "Netzersatzanlage", "Generator", "Aggregat", "Diesel", "Feldverteiler", "Server-Rack", "Patchkabel", "Firewall", "Router", "Switch", "Der Admin", "IT-Support", "Helpdesk", "Ticket #1", "Kaffee-Maschinen-Retter", "Sicherungs-Finder", "Kabel-Chaos-Kommando", "Spannungs-Abfall", "L√∂tkolben-Cowboy", "Provisoriums-Profi", "Admin-Mobil", "Strom-Dealer", "Licht-Macher", "Phasen-Phantomas", "Isolierband-K√ºnstler", "Ein Funke Hoffnung", "Wackelkontakt-W√§chter", "Blackout-Buddy", "Saft-Spender", "Dauer-Summton", "Brumm-B√§r", "Kriechstrom-Kavalier", "Widerstands-Nest", "Kondensator-Knall", "Trafo-H√§uschen", "Lichtbogen-Larry", "Phasen-Pr√ºgler", "Nullleiter-N√∂rgler", "Frequenz-Freak", "Gleichstrom-Gott", "Wechselstrom-Willi", "Starkstrom-Stalin", "Schraubenschl√ºssel-Schwinger", "L√∂tkolben-Lord", "Multimeter-Magier", "Oszilloskop-Operator", "Werkbank-W√ºterich", "Schraubstock-Sheriff", "Kabeltrommel-K√∂nig", "Kabelbinder-K√ºnstler", "L√ºsterklemmen-Legende", "Phasenpr√ºfer-Papst", "Seitenschneider-Samurai", "Krimpzangen-Kaiser", "Steckdosen-Stratege", "Protokoll-Pirat", "VDE-Veteran", "Schaltplan-Schamane", "Blackout-Bezwinger", "Redundanz-Ritter", "USV-Uhu", "NEA-Nomade", "Generator-Genie", "Aggregat-Admiral", "Diesel-Don", "Feldverteiler-F√ºrst", "Server-Sanit√§ter", "Patchkabel-Pionier", "Firewall-Fighter", "Router-Rambo", "Switch-Schl√§chter", "Admin-Apostel", "IT-Imperator", "Helpdesk-Held", "Ticket-Terminator", "Kaffee-Krieger", "Sicherungs-Samurai", "Kabel-K√ºnstler", "Spannungs-Sultan", "L√∂t-Lama", "Profi-Pfuscher", "Not-Nagel", "Licht am Ende des Tunnels", "Der Erleuchter", "Der letzte Funke", "Der Strom-Scheich", "Letzte Sicherung", "Die dritte Phase", "Der goldene Stecker", "Der rote Knopf", "Der blaue Draht", "Der gr√ºne Draht", "Der schwarze Draht", "Der braune Draht", "Technik, die begeistert", "Vorsprung durch Technik", "Das Beste oder Nichts", "Freude am Fahren", "Nichts ist unm√∂glich", "Geht nicht, gibt's nicht", "Wer A sagt, muss auch B sagen", "Was nicht passt, wird passend gemacht", "Das muss so", "Das war schon so", "Das h√§lt", "Das wird schon halten", "Das ist nur provisorisch", "Das machen wir sp√§ter richtig", "Da ist der Wurm drin", "Da liegt der Hase im Pfeffer", "Da bei√üt die Maus keinen Faden ab", "Da steppt der B√§r", "Da lachen ja die H√ºhner", "Da wird der Hund in der Pfanne verr√ºckt", "Da brat mir einer einen Storch", "Da pfeift der Papst im Kettenhemd", "Da geht die Post ab", "Da ist Holland in Not", "Da ist Polen offen", "Da ist was im Busch", "Da ist der Teufel los", "Hauptsache es funktioniert", "Wenn's blitzt, war's richtig", "Kurzschluss mit Ansage", "Rauchzeichen-Generator", "Der Z√§hler-Dreher", "Elektro-Schocker", "Kabel-Salat-Bar", "Das fliegende Provisorium", "Der Funken-Sprayer", "Der Entst√∂rer", "Der Instandsetzer", "Der System-Administrator", "Der Netzwerk-Techniker", "Der Elektroniker", "Der Elektriker", "Der Mechaniker", "Der Mechatroniker", "Der Ingenieur", "Der Techniker", "Der Monteur", "Der Installateur", "Der Hausmeister", "Der Facility-Manager", "Das Multitalent", "Der Allesk√∂nner", "Der Tausendsassa", "Der Wunderwuzzi", "Der MacGyver des kleinen Mannes", "Der A-Team-Transporter" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        thw: {
            name: "Blaue Wichtel", emoji: "üõ†Ô∏è",
            targetVehicleTypes: { 40: 'MTW-TZ', 41: 'MzGW (FGr N)', 42: 'LKW K 9', 43: 'BRmG R', 44: 'Anh DLE', 45: 'MLW 5', 93: 'MTW-O', 100: 'MLW 4', 101: 'Anh SwPu', 102: 'Anh 7', 109: 'MzGW SB', 123: 'LKW 7 Lbw (FGr WP)', 124: 'MTW-OV', 39: 'GKW', 65: 'LKW 7 Lkr 19 tm' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Technik-", "Hilfs-", "Bau-", "Logistik-", "R√§um-", "St√ºtz-", "Pumpen-", "Generator-", "Blau-", "Wichtel-", "Chaos-", "Paletten-", "Kabel-", "Schlumpf-", "Tr√ºmmer-", "Beton-", "Holz-", "Stahl-"];
                const adjektive = ["Blauer", "Technischer", "Hilfsbereiter", "Verplanter", "Chaotischer", "Stabiler", "Schwerer", "Tragender", "Leuchtender", "Unerm√ºdlicher", "Kreativer", "Solider", "Standfester", "Robuster"];
                const namen = [ "Wichtel", "Schlumpf", "Helfer", "Pionier", "Logistiker", "Ingenieur", "Baumeister", "Maschinist", "Anpacker", "Fachberater", "Ortsbeauftragter", "Bastler", "T√ºftler", "Konstrukteur", "Statiker", "Truppf√ºhrer", "Baufachberater", "Kraftfahrer", "Baukasten", "St√ºtze", "Fundament", "Generator", "Pumpe", "Hebel", "Getriebe", "Werkzeugkiste", "Palette", "Gitterbox", "Einsatzbefehl", "Lichtmast", "Strom-Aggregat", "Presslufthammer", "Trennschleifer", "Hydraulik-Spreizer", "Betonkettens√§ge", "Stahltr√§ger", "Sandsack", "Tauchpumpe", "Notstromaggregat", "Hebekissen", "Kernbohrger√§t", "Plasmabrenner", "Verbrauchsgut", "Abst√ºtzung", "Hochwasser-Helfer", "Sturmschaden-Beseitiger", "Blaue-Eminenz", "Chaos-Kommando", "Wichtel-Express", "Technik-Trouble", "Paletten-Polo", "Kabel-Salat-Express", "Schlumpf-Transporter", "H√ºpfburg-Aufbauer", "Kaffee-Versorger", "THW-Taxi", "Tausend-Hilflose-Wichtel", "Toll-ein-Anderer-Machts", "Teile-Hin-und-Weg", "Legoland-f√ºr-Erwachsene", "Gitterbox-Ballett", "Katastrophen-Touristen-Betreuung", "Unter Helfersyndrom Leidende", "Blaulicht-Tetris", "Deich-Verteidiger", "Keller-Leer-Pumper", "Sandsack-Schlepper-Syndikat", "Stapel-Stratege", "√úberall-Helfer", "Ich-kann-das-reparieren", "Der-Gerade-Bieger", "Blauer Engel mit Werkzeugkoffer", "Katastrophen-Kaffeekr√§nzchen", "Stapel-Champion", "Alles-Kleber", "Gaffer-Abschirmung", "Strom-Dealer", "Licht-Bringer", "Pumpen-Paganini", "R√§um-Rambo", "St√ºtz-Stalin", "Logistik-Lord", "Bau-Baron", "Technik-Titan", "Hilfs-Held", "Wichtel-Wunder", "Schlumpf-Sheriff", "Tr√ºmmer-Troll", "Beton-Bei√üer", "Holz-Hobbit", "Stahl-Stier", "Paletten-Papst", "Kabel-K√∂nig", "Generator-Genie", "Stapel-Sultan", "Universal-Dilettant", "Hoffnung in Blau", "Technik die begeistert", "Wo ist die Anleitung?", "Ehrenamts-Einhorn", "Material-Magier", "Feld-Faktotum", "Not-Nagel", "Krisen-K√ºnstler", "Lage-L√∂ser", "Problem-Pflaster", "Sorgen-Schlichter", "Unwetter-Uhu", "Sturm-Stratege", "Flut-Fl√ºsterer", "Chaos-Chirurg", "Pannen-Pionier", "Rettungs-Ritter", "Hilfs-Heiland", "Technik-Teufel", "Blauer Riese", "Der Zupacker", "Der Macher", "Der K√ºmmerer", "Die Hoffnung", "Der Fels in der Brandung", "Der Allesk√∂nner", "Das Schweizer Taschenmesser", "Der Probleml√∂ser", "Der Unverzichtbare", "Der Held vom Erdbeerfeld", "Der letzte Ausweg", "Der Joker", "Die blaue Wand", "Der Fels", "Der Anker", "Der Leuchtturm", "Der Felsblock", "Die St√ºtze der Gesellschaft", "Der blaue Blitz", "Der blaue Donner", "Der blaue Sturm", "Der blaue Orkan", "Der blaue Tsunami", "Der blaue Vulkan", "Der blaue Komet", "Der blaue Meteor", "Der blaue Gigant", "Der blaue Titan", "Der blaue Koloss", "Der blaue Goliath", "Der blaue Herkules", "Der blaue Samson", "Der blaue Atlas", "Der blaue Odysseus", "Der blaue Achilles", "Der blaue Hektor", "Blaulicht-Bobbycar", "Tr√ºmmer-Taxi", "Schraubenschl√ºssel-Express", "Gummistiefel-Galopper", "Sandsack-Schlepper", "Diesel-Dino", "Technikhure", "Blaulicht-Bolide", "Aggregat-Anh√§nger Deluxe", "Kistenkutsche", "Allrad-Asi", "Stromschubse", "GKW-Gott", "Pressluft-Panzer", "Pannenpanzer", "Bierbank-Bomber", "Blaumann-Bus", "Wasserwand-Walze", "Tr√ºmmer-Trecker", "Kaffeekannen-Kurier", "Sandsack-Sprinter", "Generator-Gurke", "Baustellen-Buggy", "Blaulicht-Bumsbude", "Schlamm-Schleuder", "Schrauber-Schrottkarre", "Hilfsarbeiter-Hotrod", "Diesel-Dampflok", "Werkzeug-Wagen", "Flut-Ferrari", "Matschmobil", "Aggregate-Ami", "Pritschen-Porsche", "Schrottkutscher", "Notstrom-Nobelhobel", "Katastrophenkutsche", "Kabel-Kutsche", "Blaulicht-Bauer", "Br√ºcken-Bulldogge", "Sandsack-Schubser", "Techniktanker", "Blaumann-Bomber", "Ger√ºmpel-Gef√§hrt", "Flutwalze", "Katastrophen-Kart", "GKW-Gaudi-Mobil", "Blaulicht-Bettmobil", "Diesel-Dickschiff", "Einsatz-Esel", "Tr√ºmmertraktor" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        wasserrettung: {
            name: "Wasserrettung", emoji: "üö§",
            targetVehicleTypes: { 63: 'GW-Taucher', 64: 'GW-Wasserrettung', 70: 'MZB', 66: 'Anh MzB', 67: 'Anh SchlB', 68: 'Anh MzAB', 69: 'Tauchkraftwagen', 71: 'AB-MZB' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Fluss-", "See-", "Tauch-", "Wasser-", "Wellen-", "Str√∂mungs-", "Ufer-", "Sonar-", "Tiefen-", "Schlick-", "Neopren-"];
                const adjektive = ["Nasser", "Tiefer", "Blubbernder", "Kalter", "Schneller", "Leckgeschlagener", "Schwimmender", "Tauchender", "Feuchter", "Klammer", "Glitschiger"];
                const namen = [ "Froschmann", "Kapit√§n", "Pirat", "Matrose", "Taucher", "Retter", "Wasserratte", "Fluss-Sheriff", "Bademeister", "Otter", "Biber", "Hecht", "Zander", "Wassermann", "Nixe", "Wels", "Kormoran", "Anker", "Schraube", "Sonar", "Rettungsring", "Schlauchboot", "Tauchglocke", "Periskop", "Tiefenmesser", "Schleuse", "Kielwasser", "Str√∂mung", "Neoprenanzug", "Druckluftflasche", "Tauchcomputer", "Trockenanzug", "Hebesack", "Sprungschicht", "Dekompression", "Rhein", "Donau", "Elbe", "Bodensee", "M√ºritz", "Chiemsee", "Quietsche-Ente", "Bade-Ente", "Gummiboot", "Seepferdchen", "Feuchter-Traum", "Planschbecken-Patrouille", "Unterwasser-Staubsauger", "Schlick-Schlitten", "Blubber-Blitz", "Abtaucher", "Nasser-Willy", "Amphibien-Ambulanz", "Wellen-Reiter", "Fisch-Schreck", "Algen-M√§her", "Schilf-Schneider", "Ente-Nass", "Badewannen-Admiral", "Schlamm-W√ºhler", "Anker-Auswerfer", "Forelle", "Karpfen", "Aal", "Barsch", "Pl√∂tze", "Brachse", "Rotfeder", "Ukelei", "Gr√ºndling" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => { const name = namen.random(); if (name.includes(' ')) return name; return `${praefixe.random()}${name}`; } ];
                return patterns.random()();
            }
        },
        drohnen: {
            name: "Himmels-Augen", emoji: "üëÅÔ∏è",
            targetVehicleTypes: { 125: 'MTW-Tr UL', 126: 'MTF Drohne', 127: 'GW UAS' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Sp√§h-", "Luft-", "Sky-", "Cyber-", "Aero-", "Aufkl√§rungs-", "Sensor-", "Daten-", "√úberwachungs-", "Adler-", "Falken-", "Geister-", "Leise-", "Rotor-", "Kamera-", "Zoom-", "Pixel-", "GPS-"];
                const adjektive = ["Schwebender", "Leiser", "Digitaler", "Allsehender", "Gestochen-Scharfer", "Taktischer", "Unbemerkter", "Summender", "Neugieriger", "Pixeliger", "Versteckter", "Autonomer", "Schwirrender", "K√ºhler", "Windiger"];
                const namen = [ "Auge", "Spion", "Libelle", "Kolibri", "Moskito", "Schabe", "Wespe", "Hornisse", "Biene", "Falke", "Adler", "Bussard", "Habicht", "Geier", "Uhu", "Eule", "Geist", "Schatten", "Phantom", "Sp√§her", "Beobachter", "W√§chter", "Vogel", "Kamera", "Objektiv", "Sensor", "Pixel", "Zoom", "Gimbal", "Rotor", "Propeller", "Akku", "Videosignal", "Datenstrom", "Koordinaten", "Satellit", "GPS", "Big Brother", "Auge des Horus", "Auge Saurons", "Orwell", "Skynet", "Die Wanze", "Der Lauschangriff", "Area 51", "Roswell", "UFO", "Reaper", "Predator", "Global Hawk", "Watchkeeper", "Heron", "Luna", "Aladin", "M√ºcke", "KZO", "Taranis", "Neuron", "X-47B", "Hugin", "Munin", "Valkyrie", "Heimdall", "Argus", "Cyclops", "Wanze", "Spy-Copter", "Nerd-Spielzeug", "Teures Spielzeug", "Propeller-Paparazzi", "Gaffer-aus-der-Luft", "Summ-Summ", "Brumm-Brumm", "Schwebestativ", "Selfie-Stick 3.0", "Nachbars-Schreck", "Vogel-Schreck", "Amazon-Paketbote", "Pizzabote 2030", "Eindringling", "Luftikus", "Hochstapler", "Der neugierige Nachbar", "Der Spanner", "Das fliegende Auge", "Die schwebende Linse", "Der digitale Bote", "Der lautlose J√§ger", "Der unsichtbare Dritte", "Die Wahrheit von Oben", "Der Wolken-Wanderer", "Der Wind-Reiter", "Der Himmels-St√ºrmer", "Lagebild", "Aufkl√§rung", "√úberwachung", "Zielerfassung", "Live-Feed", "HD-Stream", "4K-Aufl√∂sung", "Nachtsicht", "W√§rmebild", "Infrarot", "Laser-Designator", "Taktische-Drohne", "Mikro-Drohne", "Nano-Drohne", "Quadrocopter", "Hexacopter", "Octocopter", "Starrfl√ºgler", "VTOL", "Schwarm", "Drohnen-Schwarm", "Kollektiv", "Das Nest", "Der Bienenstock", "Die Brut", "Der Schwarmgeist", "Legion", "Hydra", "Myriade", "Fl√§chen√ºberwachung", "Personensuche", "Rehkitz-Rettung", "Glutnest-Finder", "Unfall-Dokumentation", "Lage-aus-der-Luft", "Einsatz-Unterst√ºtzung", "Luft-Lage", "Der √úberflieger", "Der Gipfelst√ºrmer", "Der Wolkenkratzer", "Der Himmels-Fahrer", "Der Luft-Pirat", "Der Wolken-Segler", "Der Wind-T√§nzer", "Der Himmels-Gleiter", "Der Luft-Akrobat", "Der Wolken-Springer", "Der Wind-Jongleur", "Der Himmels-Magier", "DJI Phantom", "DJI Mavic", "DJI Inspire", "Parrot Anafi", "Yuneec Typhoon", "Autel Evo", "Skydio", "PowerEgg", "AirDog", "GoPro Karma", "3DR Solo", "Walkera Voyager", "Cheerson CX-20", "Hubsan X4", "Syma X5C", "Eachine E58", "Ryze Tello", "Blade Nano", "Fat Shark", "ImmersionRC", "RaceFlight", "Betaflight", "Cleanflight", "iNav", "ArduPilot", "Pixhawk", "FrSky Taranis", "Spektrum DX", "GoPro Hero", "RunCam", "Foxeer", "Caddx", "FPV", "First Person View", "Line of Sight", "BVLOS", "Beyond Visual Line of Sight", "U-Space", "Geo-Fencing", "No-Fly-Zone", "Return to Home", "RTH", "Waypoint Navigation", "Follow Me", "Orbit Mode", "ActiveTrack", "Point of Interest", "Headless Mode", "Altitude Hold", "Optical Flow", "Ultrasonic Sensor", "LIDAR", "SLAM", "GCS", "Ground Control Station", "Telemetry", "OSD", "On-Screen Display", "LiPo Battery", "Brushless Motor", "ESC", "Electronic Speed Controller", "Flight Controller", "PDB", "Power Distribution Board", "VTX", "Video Transmitter" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        flughafen: {
            name: "Kerosin-Kutscher", emoji: "‚úàÔ∏è",
            targetVehicleTypes: { 75: 'FLF', 76: 'Rettungstreppe' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Flugfeld-", "Airport-", "Crash-", "Turbinen-", "Gate-", "Tower-", "Kerosin-", "Runway-", "Vorfeld-", "Terminal-", "Hangar-", "Landebahn-", "Startbahn-", "Follow-Me-", "Pushback-"];
                const adjektive = ["Breiter", "Schneller", "Schwerer", "Schaumiger", "Titan-", "Gigantischer", "Donnernder", "Internationaler", "Interkontinentaler", "Regionaler", "Leuchtender", "Blinkender", "Rollender", "Startklarer"];
                const namen = [ "Panther", "Dragon", "Striker", "Tiger", "Simba", "Ziegler", "Rosenbauer", "Oshkosh", "IVECO", "Sides", "Kronenburg", "Z-Class", "Advancer", "Buffalo", "Cobra", "Falcon", "Viper", "Puma", "Leopard", "Follow-Me-Car-Schreck", "Gate-Goliath", "Runway-Retter", "Turbinen-Tornado", "Fl√ºgel-Fl√ºsterer", "Boeing-Bezwinger", "Airbus-Albtraum", "Concorde-Cop", "Tower-Titan", "Pushback-Panzer", "Vorfeld-Vulkan", "Terminal-Terminator", "Hangar-Held", "Landebahn-Legende", "Startbahn-Stratege", "Kerosin-K√∂nig", "Schaum-Schl√§ger", "Pulver-Prinz", "Wasser-Werfer", "Cockpit-Cleaner", "Triebwerks-Tester", "Reifen-R√§cher", "Winglet-W√§chter", "Fahrwerks-Fighter", "Leitwerks-Lord", "Rumpf-Ritter", "Frachtraum-Freund", "Gep√§ck-Gott", "Passagier-Papst", "Pilot-Pate", "Fluglotsen-Freund", "Boden-Crew-Boss", "Vogel-Schreck", "Bird-Strike-Blocker", "Enteisungs-Eroberer", "Nebel-Navigator", "Scherwind-Schild", "Aquaplaning-Ass", "FOD-Finder", "Foreign-Object-Damage", "Marshaller", "Einwinker", "Gangway-Garant", "Fluggastbr√ºcken-Freund", "Zoll-Zerst√∂rer", "Sicherheits-Sultan", "Duty-Free-Dompteur", "Last-Call-L√∂scher", "Boarding-Beender", "Take-Off-Titan", "Landing-Lord", "Touchdown-Terminator", "Schubumkehr-Schreck", "Bremsklappen-Bezwinger", "Autopilot-Abschalter", "Mayday-Meister", "Pan-Pan-Pionier", "Notrutschen-Navigator", "Schwimmwesten-Spezialist", "Sauerstoffmasken-Samariter", "Der-rote-Baron", "Die-fliegende-Festung", "Der-Stahl-Adler", "Der-Schaum-Teppich", "Der-Pulver-Puster", "Die-Wasser-Wand", "Der-letzte-Check", "Der-klare-Kanal", "Cleared-for-Take-Off", "Final-Approach", "Roger-That", "Alpha-Bravo-Charlie", "ICAO-Code-Kenner", "IATA-Code-Imperator", "A380-Amigo", "B747-Buddy", "Jumbo-Jet-J√§ger", "Dreamliner-Dompteur", "Air-Force-One-Assistent", "Beluga-Besch√ºtzer", "Antonov-Anpacker", "Cessna-Crasher", "Learjet-L√∂scher", "Gulfstream-Garant", "Challenger-Champion", "Global-Express-Gott", "Citation-Zerst√∂rer", "Embraer-Eroberer", "Fokker-Fighter", "McDonnell-Douglas-Meister", "Lockheed-Lord", "Tupolev-Titan", "Iljuschin-Imperator", "Suchoi-Sultan", "MiG-Magier", "Eurofighter-Eskorte", "Tornado-Tamer", "Raptor-Retter", "Lightning-L√∂scher", "Blackbird-Blocker", "Spirit-Spezialist", "U-2-Unterst√ºtzer", "AWACS-Aufpasser", "Tanker-Terminator", "Transall-Trapper", "Hercules-Held", "Globemaster-Gott", "Galaxy-Gigant", "Stratotanker-Stratege", "C-130", "A400M", "C-5", "C-17", "KC-135", "KC-10", "E-3", "RC-135", "F-15", "F-16", "F-22", "F-35", "Su-57", "J-20", "Gripen", "Rafale", "Typhoon", "MiG-29", "Su-27" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        gefahrgut: {
            name: "Giftmischer", emoji: "‚ò£Ô∏è",
            targetVehicleTypes: { 53: 'Dekon-P', 27: 'GW-Gefahrgut', 12: 'GW-Messtechnik', 5: 'GW-A', 77: 'AB-Gefahrgut', 54: 'AB-Dekon-P', 48: 'AB-Atemschutz' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Chemie-", "Gift-", "S√§ure-", "Strahlen-", "Deko-", "ABC-", "Atom-", "Bio-", "Gas-", "Mess-", "Sp√ºr-", "Analyse-", "Labor-", "Isotopen-", "Molek√ºl-", "Proben-", "Filter-", "Schutz-"];
                const adjektive = ["√Ñtzender", "Giftiger", "Radioaktiver", "Dichter", "Sicherer", "Hermetischer", "Analytischer", "Gef√§hrlicher", "Fl√ºchtiger", "Instabiler", "Reaktiver", "Gekapselter", "Gemessener", "Gefilterter"];
                const namen = [ "Walter White", "Heisenberg", "Jesse Pinkman", "Marie Curie", "Fritz Haber", "Paracelsus", "Dr. No", "Dr. Poison", "Joker", "Scarecrow", "Poison Ivy", "Der Pinguin", "Lex Luthor", "Green Goblin", "Pandora's B√ºchse", "Tschernobyl-Express", "Fukushima-Taxi", "Area 51 Kurier", "C-Waffen-Shuttle", "S√§urefass", "Atomm√ºll-Transporter", "Gift-K√ºche", "Hexen-K√ºche", "Drogen-Labor", "Mobile-Dusche", "ABC-Sch√ºtze", "Mess-Fuchs", "Sp√ºr-Hund", "Analyse-Einheit", "Labor-Ratte", "Isotopen-J√§ger", "Molek√ºl-Magier", "Proben-Sammler", "Filter-Freak", "Schutzanzug-Chauffeur", "Voll-Gummi", "Gefahr-Gut-Gundel", "Blubber-Blaster", "Atom-Spalter", "Periodensystem-Pendler", "Der-letzte-Tropfen", "S√§ure-Steven", "Laugen-Larry", "Gas-Gerd", "Strahlen-Sigi", "Deko-Doris", "Mess-Max", "Sp√ºr-Simone", "Analyse-Anna", "Labor-Leo", "Isotopen-Ingo", "Molek√ºl-Moni", "Proben-Peter", "Filter-Franz", "Schutz-Susi", "Kleine-S√ºnde", "B√∂ser-Stoff", "Teufels-Zeug", "Hexen-Gebr√§u", "Zauber-Trank", "Geigerz√§hler", "Dosimeter", "PID-Messer", "Pr√ºfr√∂hrchen", "Lackmus-Papier", "pH-Streifen", "Explosimeter", "Interferometer", "Spektrometer", "Chromatograph", "CSA", "Chemikalienschutzanzug", "Pressluftatmer", "Filtermaske", "Dosis", "Becquerel", "Sievert", "Gray", "Rem", "Rad", "Curie", "MAK-Wert", "TRK-Wert", "LD50", "LC50", "UN-Nummer", "Gefahrenzettel", "Gefahren-Diamant", "Auffangwanne", "Bindemittel", "Neutralisationsmittel", "Abdichtmaterial", "Umpump-Armatur", "Erdungs-Stange", "Funkenfreies-Werkzeug", "Dekontamination", "Ein-Zelt-System", "Drei-Zelt-System", "Schwarz-Bereich", "Grau-Bereich", "Wei√ü-Bereich", "GAMS-Regel", "Gefahr", "Absperrung", "Menschenrettung", "Spezialkr√§fte", "Absperr-Alex", "GAMS-G√ºnther", "S√§ure-Samariter", "Laugen-L√∂scher", "Gas-Gott", "Strahlen-Schamane", "Deko-Dompteur", "Mess-Meister", "Sp√ºr-Spezialist", "Analyse-Ass", "Labor-Lord", "Isotopen-Imperator", "Molek√ºl-Meister", "Proben-Papst", "Filter-F√ºrst", "Schutz-Sultan", "Chemie-Kaiser", "Gift-General", "S√§ure-Sultan", "Strahlen-Scheich", "Deko-Direktor", "ABC-Admiral", "Atom-Apostel", "Bio-Baron", "Gas-Gigant", "Mess-Magier", "Sp√ºr-Souver√§n", "Alkalimetalle", "Erdalkalimetalle", "Halogene", "Edelgase", "Lanthanoide", "Actinoide", "√úbergangsmetalle", "Wasserstoff", "Helium", "Lithium", "Beryllium", "Bor", "Kohlenstoff", "Stickstoff", "Sauerstoff", "Fluor", "Neon", "Natrium", "Magnesium", "Aluminium", "Silicium", "Phosphor", "Schwefel", "Chlor", "Argon", "Kalium", "Calcium", "Scandium", "Titan", "Vanadium", "Chrom", "Mangan", "Eisen", "Cobalt", "Nickel", "Kupfer", "Zink", "Gallium", "Germanium", "Arsen", "Selen", "Brom", "Krypton", "Rubidium", "Strontium", "Yttrium", "Zirconium", "Niob", "Molybd√§n", "Technetium", "Ruthenium", "Rhodium", "Palladium", "Silber", "Cadmium", "Indium", "Zinn", "Antimon", "Tellur", "Iod", "Xenon", "Caesium", "Barium", "Lanthan", "Cer", "Praseodym", "Neodym", "Promethium", "Samarium", "Europium", "Gadolinium", "Terbium", "Dysprosium", "Holmium", "Erbium", "Thulium", "Ytterbium", "Lutetium", "Hafnium", "Tantal", "Wolfram", "Rhenium", "Osmium", "Iridium", "Platin", "Gold", "Quecksilber", "Thallium", "Blei", "Bismut", "Polonium", "Astat", "Radon", "Francium", "Radium", "Actinium", "Thorium", "Protactinium", "Uran", "Neptunium", "Plutonium" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        hubrettung: {
            name: "Himmelsleitern", emoji: "ü™ú",
            targetVehicleTypes: { 57: 'FwK', 2: 'DLK 23', 85: 'TM 50' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Leiter-", "Rettungs-", "Gelenk-", "Teleskop-", "H√∂hen-", "Himmels-", "Turm-", "Wolken-", "Gipfel-", "Dach-", "Balkon-", "Fenster-", "Fassaden-", "Hydraulik-", "Stahl-"];
                const adjektive = ["Langer", "Hoher", "St√§hlerner", "Ausgefahrener", "Hydraulischer", "Standfester", "Schwindelfreier", "Rettender", "Steiler", "Senkrechter", "Gelenkiger", "Massiver", "Eiserner", "Unbeugsamer"];
                const namen = [ "Jakobsleiter", "Turm", "Giraffe", "Kranich", "Langer-Gustav", "Ikarus", "Daedalus", "Adlerhorst", "Falkennest", "Aussichtsplattform", "Sprungturm", "Leuchtturm", "Gipfelkreuz", "Wolkenkratzer", "Babylon", "Eiffelturm", "Sears Tower", "Burj Khalifa", "Rapunzel", "Himmelsst√ºrmer", "Senkrechtstarter", "Hochstapler", "Aufzug", "Fahrstuhl", "Korb", "Gondel", "Sessellift", "Mast", "Pfeiler", "Tr√§ger", "Ausleger", "Gelenk", "Teleskop", "Hydraulik", "Stempel", "St√ºtze", "Katzen-Retter", "Feuer-Fahrstuhl", "Balkon-Taxi", "Fenster-Gucker", "Stockwerk-Shuttle", "Umzugs-Helfer", "Gardinen-Aufh√§nger", "Dachdecker-Traum", "Schornsteinfeger-Freund", "Kirchturm-Kavalier", "H√∂hen-Angst-√úberwinder", "Die-rettende-Hand", "Br√ºcken-Inspektor", "Fassaden-Kletterer", "Der-lange-Arm", "Der-feste-Stand", "Der-sichere-Weg-nach-oben", "√úber-den-D√§chern", "Blick-von-oben", "Der-√úberblick", "Strategische-Position", "Angriffsweg", "Rettungsweg", "Leiterpark", "Hauptabst√ºtzung", "Notablass", "Korbsteuerung", "Windmesser", "Nivellierung", "Abst√ºtzbreite", "Ausladung", "Rettungsh√∂he", "Nennrettungsh√∂he", "Gelenkteil", "Leitersegment", "Rettungskorb", "Krankentragenhalterung", "Wasserwerfer", "Monitor", "Steigleitung", "Last√∂se", "Stromerzeuger", "Flutlichtscheinwerfer", "Absturzsicherung", "Ger√§tekasten", "Schleifkorbtrage", "Sprungpolster", "Kettens√§ge", "Einrei√ühaken", "Der-lange-Lulatsch", "Die-lange-Leiter", "Der-rote-Riese", "Der-Stahl-Gigant", "Der-Himmels-Kratzer", "Der-Wolken-Bezwinger", "Der-Gipfel-Erklimmer", "Der-Dach-Besetzer", "Der-Balkon-Besucher", "Der-Fenster-Freund", "Der-Fassaden-Fl√ºsterer", "Der-Hydraulik-Herkules", "Der-Stahl-Stier", "Der-Leiter-Lord", "Der-Gelenk-Gott", "Der-Teleskop-Titan", "Der-H√∂hen-Held", "Der-Himmels-Heiland", "Der-Turm-Titan", "Der-Wolken-W√§chter", "Der-Gipfel-Garant", "Der-Dach-Dompteur", "Der-Balkon-Baron", "Der-Fenster-F√ºrst", "Der-Fassaden-Feldherr", "Der-Hydraulik-Halbgott", "Der-Stahl-Samurai", "Metz", "Rosenbauer", "Magirus", "Bronto Skylift", "Ruthmann", "Ziegler", "Schlingmann", "Lohr", "Gimaex", "Iveco", "MAN", "Mercedes-Benz", "Scania", "Volvo", "DAF", "Dennis", "E-One", "Pierce", "Seagrave", "Sutphen", "Spartan", "Leitersatz", "Unterleiter", "Mittelleiter", "Oberleiter", "Spitzenteil", "Anlegeleiter", "Schiebleiter", "Steckleiter", "Klappleiter", "Hakenleiter", "Strickleiter", "Seilleiter", "Rettungsleiter", "Feuerleiter", "Drehleiter", "Gelenkmast", "Teleskopmast", "Hubarbeitsb√ºhne", "Hubrettungsb√ºhne", "Rettungsb√ºhne", "Arbeitsb√ºhne", "Steiger", "Kran", "Autokran", "Mobilkran", "Turmdrehkran", "Rettungszylinder", "Hebekissen", "Spreizer", "Schere", "Kombiger√§t", "Plasmaschneider", "Brennschneidger√§t", "Trennschleifer", "S√§bels√§ge", "B√ºgels√§ge", "Axt", "Beil", "Halligan-Tool", "Feuerwehr-Axt" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        schienenfahrzeuge: {
            name: "Lokomotuffen", emoji: "üöÇ",
            targetVehicleTypes: { 162: 'RW-Schiene', 163: 'HLF Schiene' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Schienen-", "Gleis-", "Zug-", "Bahn-", "Tunnel-", "Weichen-", "Stellwerks-", "ICE-", "Express-", "G√ºter-", "Regional-", "Signal-", "Waggon-", "Schwellen-", "Oberleitungs-"];
                const adjektive = ["Eiserner", "Ratternder", "Schwerer", "Unaufhaltsamer", "P√ºnktlicher", "Versp√§teter", "Entgleister", "Rostiger", "Quietschender", "Dampfender", "Elektrischer", "Dieselnder", "Tender-"];
                const namen = [ "Emma", "Thomas", "Adler", "Rocket", "Puffing Billy", "Big Boy", "Mallard", "Flying Scotsman", "Rheingold", "Orient-Express", "Trans-Siberian Express", "Hogwarts-Express", "Polar-Express", "Geister-Zug", "Bummel-Zug", "Rasender-Roland", "Molly", "Choo-Choo", "Tschuff-Tschuff", "Tuff-Tuff", "Lokf√ºhrer-Lukas", "Jim Knopf", "Casey Jones", "John Henry", "Schaffner", "Heizer", "Rangierer", "Fahrdienstleiter", "Schienen-Sheriff", "Gleis-Goliath", "Tunnel-Terror", "Weichen-Willi", "Stellwerks-Stratege", "Signal-Sigi", "Bahn√ºbergangs-Blockierer", "Prellbock-Pr√ºfer", "Schotterbett-Schl√§fer", "Oberleitungs-Olaf", "Der-rote-Baron", "Der-blaue-Enzian", "Der-fliegende-Hamburger", "Der-Gl√§serne-Zug", "Die-schw√§bische-Eisenbahn", "ICE", "TGV", "Shinkansen", "Eurostar", "Thalys", "Railjet", "Pendolino", "Talent", "Desiro", "KISS", "FLIRT", "GTW", "Regio-Shuttle", "LINT", "Alstom Coradia", "Siemens Vectron", "Bombardier TRAXX", "Stadler Eurodual", "Krauss-Maffei", "Henschel", "Krupp", "AEG", "BBC", "Siemens-Schuckert", "Dampflok", "Diesellok", "E-Lok", "Hybridlok", "Schmalspurbahn", "Zahnradbahn", "Schwebebahn", "Magnetschwebebahn", "U-Bahn", "S-Bahn", "Stra√üenbahn", "Draisine", "Schienenbus", "Triebwagen", "Waggon", "G√ºterwagen", "Personenwagen", "Speisewagen", "Schlafwagen", "Postwagen", "Kesselwagen", "Containerwagen", "Sch√ºttgutwagen", "Flachwagen", "Rungenwagen", "Schiebewandwagen", "Selbstentladewagen", "Bahnhof", "Haltepunkt", "Stellwerk", "Weiche", "Signal", "Gleis", "Schiene", "Schwelle", "Schotterbett", "Fahrleitung", "Stromabnehmer", "Puffer", "Kupplung", "Bremse", "Rad", "Achse", "Tender", "Kessel", "Feuerb√ºchse", "Schornstein", "Zylinder", "Treibstange", "F√ºhrerstand", "Kohle", "Wasser", "Dampf", "Diesel", "Strom", "Versp√§tung", "Anschluss", "Fahrplan", "Ticket", "Reservierung", "1.-Klasse", "2.-Klasse", "Zugbindung", "Ersatzverkehr", "Schienenersatzverkehr", "SEV", "Notbremse", "Entgleisung", "Unfall", "Rettungszug", "Hilfszug", "Kranzug", "L√∂sch-und-Rettungszug", "LRZ", "Tunnel-Task-Force", "Gleis-L√§ufer", "Der-eiserne-Retter", "Die-rote-Gefahr", "Der-st√§hlerne-Koloss", "Der-Gleis-Gigant", "Der-Tunnel-Tornado", "Der-Weichen-W√§chter", "Der-Stellwerks-Sultan", "Der-Signal-Samurai", "Der-Bahn-Baron", "Der-Zug-Zar", "Der-ICE-Imperator", "Der-Express-Eroberer", "Der-G√ºter-Goliath", "Der-Regional-Ritter", "Der-Waggon-Warlord", "Der-Schwellen-Schreck", "Der-Oberleitungs-Overlord", "Der-Schienen-Schamane", "Der-Gleis-Geist", "Die-Lok-Legende", "Die-Bahn-Bestie", "Der-Tunnel-Teufel", "Der-Weichen-W√ºterich", "Der-Stellwerks-Stalin", "Der-Signal-Sultan", "Der-Bahn-Behemoth", "Der-Zug-Titan", "Der-ICE-Ifrit", "Der-Express-Executor", "Der-G√ºter-Geist", "Der-Regional-Rambo", "Der-Waggon-W√§chter", "Der-Schwellen-Schinder", "Der-Oberleitungs-Oger", "Der-Schienen-Scherge", "Der-Gleis-Gladiator", "Die-Lok-Lawine" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        schlauchwagen: {
            name: "Wasser-Autobahn", emoji: "üíß",
            targetVehicleTypes: { 13: 'SW 1000', 14: 'SW 2000', 15: 'SW 2000-Tr', 16: 'SW Kats', 11: 'GW-L2-Wasser', 143: 'Anh Schlauch', 62: 'AB-Schlauch' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Schlauch-", "Wasser-", "Leitungs-", "Hydranten-", "Pumpen-", "Druck-", "F√∂rder-", "Nudel-", "Spaghetti-", "Makkaroni-", "Endlos-", "Meter-", "Kilometer-", "Verlege-"];
                const adjektive = ["Nasser", "Langer", "Rollender", "Durstiger", "Praller", "Gef√ºllter", "Undichter", "Gekuppelter", "Verknoteter", "Schwerer", "Flexibler", "Unendlicher", "Blauer", "Roter", "Gelber"];
                const namen = [ "Pipeline", "Aqu√§dukt", "Wasser-Ader", "Lebens-Ader", "Nudel-Express", "Spaghetti-Monster", "Makkaroni-Mobil", "Durst-L√∂scher", "Hydranten-Freund", "Feld-Bew√§sserer", "Pool-F√ºller", "Wasser-Marsch", "Schlauch-Salat", "Knoten-K√∂nig", "Kupplungs-K√ºnstler", "Verleger-Veteran", "Aufroller-Ass", "Abroller-Armada", "Meter-Macher", "Kilometer-Kavalier", "B-Leitung-Baron", "C-Leitung-Champion", "F-Leitung-Freddy", "Wasser-Spender", "Flut-Fighter", "D√ºrre-Dompteur", "W√ºsten-W√§sserer", "Brand-Bremser", "Glut-Gegner", "Tankl√∂schfahrzeug-Tankstelle", "TLF-Tankstelle", "Mobile-Zapfs√§ule", "Der-lange-Weg", "Endlos-Leitung", "Wasser-Br√ºcke", "Fluss-Umleitung", "See-Anz√ºgler", "Teich-Entleerer", "Bach-Blockierer", "Kanal-Kopierer", "Graben-Grabscher", "Rinnsal-Riese", "Quelle-Qu√§ler", "Die-nasse-Natter", "Der-blaue-Bandwurm", "Die-rote-Raupe", "Der-gelbe-Gleitwurm", "Der-sich-windende-Wurm", "Anaconda", "Python", "Boa", "Nessie", "Leviathan", "J√∂rmungandr", "Wasserschlange", "Schlauch-Paket", "Schlauch-Tragekorb", "Schlauch-Haspel", "Schlauch-Br√ºcke", "Standrohr", "Hydranten-Schl√ºssel", "System-Trenner", "Sammel-St√ºck", "Verteiler", "St√ºtzkr√ºmmer", "Strahlrohr", "Hohl-Strahlrohr", "Mehrzweck-Strahlrohr", "Pistolen-Strahlrohr", "Schaum-Strahlrohr", "Zumischer", "Saugschlauch", "Saugkorb", "Druckschlauch", "Kupplung", "Storz-Kupplung", "Knaggenteil", "Festkupplung", "Blindkupplung", "√úbergangsst√ºck", "Druckbegrenzungs-Ventil", "R√ºckschlag-Klappe", "Manometer", "Vakuumpumpe", "Kreiselpumpe", "Feuerl√∂sch-Kreiselpumpe", "Tragkraft-Spritze", "TS", "Lenz-Pumpe", "Tauch-Pumpe", "Schmutzwasser-Pumpe", "FPN", "F√∂rder-Druck", "Ausgangs-Druck", "Eingangs-Druck", "Druck-Verlust", "Geod√§tische-Saugh√∂he", "Wasser-F√∂rderung", "Lange-Wegstrecke", "Schlauch-Management", "Der-Abwickler", "Der-Aufwickler", "Der-Entknoter", "Der-Flicker", "Der-Kuppler", "Der-Dr√ºcker", "Der-Pumper", "Der-F√∂rderer", "Der-Nasse", "Der-Feuchte", "Der-Lange", "Der-Flexible", "Der-Unerm√ºdliche", "Der-Lebens-Spender", "Der-Durst-Stiller", "Die-blaue-Linie", "Die-Rettungs-Leine", "Die-Wasser-Stra√üe", "Die-nasse-Meile", "Die-letzte-Rettung", "Schlauch-Magier", "Wasser-Hexer", "Leitungs-Legende", "Hydranten-Held", "Pumpen-Papst", "Druck-Doktor", "F√∂rder-F√ºrst", "Nudel-Nomade", "Spaghetti-Sultan", "Makkaroni-Meister", "Endlos-Eroberer", "Meter-Meister", "Kilometer-K√∂nig", "Verlege-Virtuose", "Schlauch-Schamane", "Wasser-Warlock", "Leitungs-Lord", "Hydranten-Halbgott", "Pumpen-Prinz", "Druck-Druide", "F√∂rder-Pharao", "Nudel-Nostradamus", "Spaghetti-Stratege", "Makkaroni-Magier", "Endlos-Emir", "Meter-Monarch", "Kilometer-Kaiser", "Verlege-Veteran" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        sonstige: {
            name: "M√§dchen f√ºr Alles", emoji: "‚öôÔ∏è",
            targetVehicleTypes: { 4: 'RW', 10: 'GW-√ñl', 83: 'GW-Werkfeuerwehr', 36: 'MTW', 104: 'GW-L1', 105: 'GW-L2', 106: 'MTF-L', 46: 'WLF', 47: 'AB-R√ºst', 49: 'AB-√ñl', 117: 'AB-Tank', 119: 'AB-L√∂sch', 164: 'AB-Schiene', 169: 'AB-Sonderl√∂schmittel', 170: 'AB-Wasser/Schaum', 108: 'AB-L', 165: 'LauKw' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Universal-", "Logistik-", "Allzweck-", "Sonder-", "Basis-", "Reserve-", "Transport-", "Material-", "Ger√§te-", "Stab-", "Unterst√ºtzungs-", "Service-", "Pionier-", "Joker-"];
                const adjektive = ["Zuverl√§ssiger", "Stabiler", "Beladener", "Praktischer", "Unverzichtbarer", "Flexibler", "Robuster", "Solider", "Eiserner", "M√ºder", "Flei√üiger", "Stoischer", "Unauff√§lliger", "Essentieller"];
                const namen = [ "Arbeitstier", "Lastenesel", "Packpferd", "Sherpa", "Kuli", "Faktotum", "Der Ger√§t", "Das-muss-mit", "Platzhalter", "Die-eiserne-Reserve", "Schweizer-Taschenmesser", "Manus-in-Omnia", "Allesk√∂nner", "Irgendwas-ist-immer", "Der-K√ºmmerer", "Die-rechte-Hand", "Hans-Dampf", "Material-Magier", "Chaos-B√§ndiger", "Probleml√∂ser", "Helfende-Hand", "Immer-dabei", "Backup", "Plan B", "Ass im √Ñrmel", "Die-letzte-Patrone", "Der-Fels-in-der-Brandung", "Stiller-Held", "Heinzelm√§nnchen", "Wassertr√§ger", "Adjutant", "Gehilfe", "Azubi", "Praktikant", "Hiwi", "M√§dchen-f√ºr-Alles", "Hausmeister", "Facility-Manager", "Der-Macher", "Der-Zupacker", "Der-Organisator", "Der-Stratege", "Der-Versorger", "Die-St√ºtze", "Das-R√ºckgrat", "Der-Fels", "Der-Anker", "Der-Joker", "Die-Trumpfkarte", "Werkzeugkiste", "Lagerhalle", "Material-Container", "Ersatzteillager", "Wanderlager", "Spind", "Keller-Abteil", "Dachboden-Fund", "Rumpelkammer", "Garage", "Schuppen", "Werkstatt", "Baumarkt-Besucher", "IKEA-Transporter", "Sperrm√ºll-Sammler", "Flohmarkt-Held", "Messi-Mobil", "Hamster-H√ºtte", "Prepper-Paket", "Survival-Kit", "Notfall-Rucksack", "Bug-Out-Bag", "EDC-Truck", "Every-Day-Carry", "Leatherman", "Gerber", "Victorinox", "Wenger", "Maglite", "Peli-Case", "Zarges-Box", "Gitterbox", "Euro-Palette", "Ameise", "Hubwagen", "Gabelstapler", "Ladebordwand", "Zurrgurt-Zampano", "Ladungs-Sicherungs-Lord", "Paletten-Pirat", "Staplerfahrer-Klaus", "Der-Logistiker", "Der-Materialwart", "Der-Ger√§tewart", "Der-Zeugwart", "Der-Waffenmeister", "Der-Quartiermeister", "Der-Proviantmeister", "Der-Feldwebel", "Der-Spie√ü", "Mutter-der-Kompanie", "Der-Untersch√§tzte", "Der-Unbesungene", "Der-Unverzichtbare", "Der-Immer-gleiche", "Der-Ewige-Zweite", "Der-Schattenl√§ufer", "Der-Strippenzieher", "Die-graue-Eminenz", "Der-Mann-im-Hintergrund", "Die-Frau-f√ºrs-Grobe", "Der-Felsbrocken", "Die-Mauer", "Der-Prellbock", "Der-Puffer", "Die-Knautschzone", "Der-Airbag", "Der-Rettungsanker", "Der-Strohalm", "Die-letzte-Hoffnung", "Der-Notnagel", "Das-F√ºnfte-Rad-am-Wagen", "Das-Arbeitspferd", "Der-Ackergaul", "Der-Schlepper", "Der-Transporter", "Der-Laster", "Der-Brummi", "Der-Koloss", "Der-Gigant", "Der-Titan", "Der-Moloch", "Der-Behemoth", "Der-Leviathan", "Der-Dino", "Der-Elefant", "Der-Bulle", "Der-B√§r", "Der-B√ºffel", "Der-Eber", "Der-Keiler", "Der-Brocken", "Der-Klotz", "Der-Block", "Der-Monolith", "Der-Findling", "Der-Felsblock", "Die-Klette", "Der-Schatten", "Der-Begleiter", "Der-Trabant", "Der-Satellit", "Der-Mond", "Der-Planetoid", "Der-Asteroid", "Der-Komet", "Der-Meteor", "Der-Bolide", "Der-Solide", "Der-Robuste", "Der-Stabile", "Der-Feste", "Der-Harte", "Der-Z√§he", "Der-Ausdauernde", "Der-Unerm√ºdliche", "Der-Ewige" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        },
        windmaschinen: {
            name: "Sturm-Macher", emoji: "üí®",
            targetVehicleTypes: { 114: 'GW-L√ºfter', 115: 'Anh L√ºfter', 116: 'AB-L√ºfter' },
            nameGenerator: function(isLarge = false) {
                const praefixe = ["Wind-", "Sturm-", "Luft-", "Orkan-", "Puste-", "Gebl√§se-", "Rauch-", "Druck-", "Wirbel-", "Tornado-", "Hurrikan-", "Taifun-", "Zyklon-", "Ventilator-", "Turbinen-"];
                const adjektive = ["Windiger", "St√ºrmischer", "Lauter", "Dr√∂hnender", "Kr√§ftiger", "Rotierender", "Br√ºllender", "Frischer", "Eisiger", "Hei√üer", "Trockener", "Feuchter", "Starker", "Gewaltiger", "Donnernder"];
                const namen = [ "√Ñolus", "Boreas", "Zephyrus", "Eurus", "Notus", "Tornado", "Hurrikan", "Taifun", "Zyklon", "Orkan", "Sturm", "B√∂e", "Brise", "Passat", "Monsun", "F√∂hn", "Scirocco", "Mistral", "Tramontana", "Pustefix", "Trocken-F√∂hn", "Propeller", "Turbine", "Ventilator", "Gebl√§se", "Kompressor", "Verdichter", "D√ºse", "Strahltriebwerk", "Rotor", "Impeller", "Luftschraube", "Windrad", "Windm√ºhle", "Blasebalg", "Laub-Bl√§ser XXL", "B√∂ser-Wolf", "Drei-Schweinchen-Schreck", "Gro√üer-Hatschi", "Staub-Lunge", "Allergiker-Albtraum", "Frisuren-Zerst√∂rer", "Marilyn-Monroe-Effekt", "Rock-Heber", "Hut-Dieb", "Per√ºcken-Pr√ºfer", "Rauch-Vertreiber", "Stink-Tier-Neutralisator", "Mief-M√∂rder", "Qualm-Qu√§ler", "Dunst-Dr√ºcker", "Nebel-Niederrei√üer", "Sauerstoff-Spender", "Frischluft-Fanatiker", "Durchzugs-Simulator", "Fenster-Offen-Fetischist", "Der-laute-Nachbar", "Startbahn-Sound", "D√ºsenjet-Double", "H√∂llen-L√§rm", "Ohren-Schmaus", "Tinnitus-Trigger", "Konzert-Killer", "Flugzeug-Turbine", "Helikopter-Rotor", "Airboat-Antrieb", "Luftkissenboot", "Sturm-im-Wasserglas-Verhinderer", "Kartenhaus-Killer", "Zelt-Zerst√∂rer", "H√ºpfburg-Hasser", "Drachen-Steigen-Deluxe", "Wind-Kanal", "Aerodynamik-Tester", "Fallschirm-Trockner", "W√§sche-Trockner", "Haar-Trockner", "Hand-Trockner", "Bau-Trockner", "Heu-Wender", "Spreu-vom-Weizen-Trenner", "Kerzen-Ausbl√§ser", "Geburtstags-Gag", "Lagerfeuer-Anz√ºnder", "Grill-Glut-Beschleuniger", "Hei√üluft-Ballon-Bef√ºller", "Wind-Gott", "Sturm-D√§mon", "Luft-Elementar", "Orkan-Oger", "Puste-Prinz", "Gebl√§se-Geist", "Rauch-Rambo", "Druck-Drache", "Wirbel-W√ºterich", "Tornado-Titan", "Hurrikan-Held", "Taifun-Teufel", "Zyklon-Zar", "Ventilator-Veteran", "Turbinen-Troll", "√Ñolus-Apostel", "Boreas-Baron", "Zephyrus-Zar", "Eurus-Eroberer", "Notus-Nomade", "Tornado-Talisman", "Hurrikan-Hexer", "Taifun-Taktiker", "Zyklon-Zerst√∂rer", "Orkan-Operator", "Sturm-Stratege", "B√∂en-Behemoth", "Brise-Biest", "Passat-Papst", "Monsun-Meister", "F√∂hn-F√ºrst", "Scirocco-Sultan", "Mistral-Magier", "Tramontana-Titan", "Pustefix-Professor", "Trocken-F√∂hn-Techniker", "Propeller-Prinz", "Turbinen-Tausendsassa", "Ventilator-Virtuose", "Gebl√§se-Gigant", "Kompressor-K√∂nig", "Verdichter-Veteran", "D√ºsen-Dompteur", "Strahltriebwerks-Stratege", "Rotor-Ritter", "Impeller-Imperator", "Luftschrauben-Lord", "Windrad-W√ºterich", "Windm√ºhlen-Meister", "Blasebalg-Baron", "Luft-Pumpe", "Druck-Welle", "Schall-Mauer", "√úberdruck-Bel√ºftung", "Taktische-Ventilation", "Hydraulischer-L√ºfter", "Elektrischer-L√ºfter", "Verbrennungsmotor-L√ºfter", "Wassernebel-L√ºfter", "Leichtschaum-Generator", "Be-und-Entl√ºftungsger√§t", "Luft-Leistung", "Volumenstrom", "Str√∂mungs-Geschwindigkeit", "Wurf-Weite", "Neigungs-Winkel", "L√§rmpegel", "Dezibel", "Schalldruck", "Frequenz", "Hertz", "Rotation", "Umdrehungen-pro-Minute", "Drehmoment", "Leistung", "PS", "Kilowatt", "Newton", "Pascal", "Bar", "Atmosph√§re", "Hektopascal" ];
                const patterns = [ () => namen.random(), () => `${adjektive.random()} ${namen.random()}`, () => `${praefixe.random()}${namen.random()}` ];
                return patterns.random()();
            }
        }
    };

    // ========================================================================
    // 3. KERNFUNKTIONEN
    // ========================================================================
    let vehicleTypeToModuleMap = {};
    function formatTime(seconds) { if (isNaN(seconds) || seconds < 0) return "--:--"; seconds = Math.floor(seconds); const hours = Math.floor(seconds / 3600); const minutes = Math.floor((seconds % 3600) / 60); const remainingSeconds = seconds % 60; if (hours > 0) { return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`; } else { return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`; } }

    async function showBlockControlPanel() {
        showModal({ title: 'Namensgenerator Kontrollzentrum', body: 'Lade Fahrzeug- und Geb√§udedaten...' });
        try {
            const [vehicleResponse, buildingResponse] = await Promise.all([gmFetch('/api/vehicles'), gmFetch('/api/buildings')]);
            if (!vehicleResponse.ok || !buildingResponse.ok) throw new Error('API-Fehler!');
            const allVehicles = await vehicleResponse.text().then(JSON.parse);
            const allBuildings = await buildingResponse.text().then(JSON.parse);
            const buildingCache = Object.fromEntries(allBuildings.map(b => [b.id, b.caption]));

            vehicleTypeToModuleMap = {};
            for (const moduleKey in MODULE_CONFIG) {
                for (const typeId in MODULE_CONFIG[moduleKey].targetVehicleTypes) {
                    vehicleTypeToModuleMap[typeId] = moduleKey;
                }
            }

            const bodyElement = document.createElement('div');

            const selectAllLine = document.createElement('div');
            selectAllLine.className = 'ng-select-all-line';
            selectAllLine.innerHTML = `<label for="check_all"><input type="checkbox" id="check_all"><strong>Alle Bl√∂cke ausw√§hlen / abw√§hlen</strong></label>`;
            bodyElement.appendChild(selectAllLine);

            const buttonGrid = document.createElement('div');
            buttonGrid.className = 'ng-button-grid';

            const sortedModuleKeys = Object.keys(MODULE_CONFIG).sort((a, b) =>
                MODULE_CONFIG[a].name.localeCompare(MODULE_CONFIG[b].name)
            );

            for (const moduleKey of sortedModuleKeys) {
                const config = MODULE_CONFIG[moduleKey];
                const allTypeIdsInModule = Object.keys(config.targetVehicleTypes);
                const vehiclesInModule = allVehicles.filter(v => allTypeIdsInModule.some(id => id == v.vehicle_type));
                const count = vehiclesInModule.length;
                if (count === 0) continue;

                const needed = vehiclesInModule.filter(v => !v.caption.endsWith(MARKER)).length;

                const button = document.createElement('button');
                button.className = 'ng-module-btn';
                button.dataset.modulekey = moduleKey;
                button.innerHTML = `
                    <div class="ng-btn-content">${config.emoji} ${config.name}</div>
                    <span class="count">(Gesamt: ${count} / N√∂tig: ${needed})</span>
                `;
                button.addEventListener('click', () => button.classList.toggle('selected'));
                buttonGrid.appendChild(button);
            }
            bodyElement.appendChild(buttonGrid);

            bodyElement.querySelector('#check_all').addEventListener('change', (e) => {
                const isChecked = e.target.checked;
                bodyElement.querySelectorAll('.ng-module-btn').forEach(btn => {
                    if (isChecked) {
                        btn.classList.add('selected');
                    } else {
                        btn.classList.remove('selected');
                    }
                });
            });

            const actions = [{
                label: 'Loslegen (N√∂tige umbenennen)',
                className: 'btn-start',
                callback: () => {
                    const selectedModules = Array.from(bodyElement.querySelectorAll('.ng-module-btn.selected')).map(btn => btn.dataset.modulekey);
                    if (selectedModules.length === 0) { alert("Bitte w√§hle mindestens einen Block aus."); return; }
                    let allSelectedTypeIds = [];
                    selectedModules.forEach(key => allSelectedTypeIds.push(...Object.keys(MODULE_CONFIG[key].targetVehicleTypes)));
                    const vehiclesToProcess = allVehicles.filter(v => allSelectedTypeIds.some(id => id == v.vehicle_type) && !v.caption.endsWith(MARKER));
                    if (vehiclesToProcess.length > 0) startRenamingProcess(vehiclesToProcess, buildingCache);
                    else alert("Keine Fahrzeuge f√ºr diese Auswahl zur Umbenennung n√∂tig.");
                }
            }, {
                label: 'Alles √ºberschreiben (erzwingen)',
                className: 'btn-warning',
                callback: () => {
                    const selectedModules = Array.from(bodyElement.querySelectorAll('.ng-module-btn.selected')).map(btn => btn.dataset.modulekey);
                    if (selectedModules.length === 0) { alert("Bitte w√§hle mindestens einen Block aus."); return; }
                    let allSelectedTypeIds = [];
                    selectedModules.forEach(key => allSelectedTypeIds.push(...Object.keys(MODULE_CONFIG[key].targetVehicleTypes)));
                    const vehiclesToProcess = allVehicles.filter(v => allSelectedTypeIds.some(id => id == v.vehicle_type));
                    if (vehiclesToProcess.length > 0 && confirm(`ACHTUNG!\n\nM√∂chtest du wirklich ALLE ${vehiclesToProcess.length} Fahrzeuge der ausgew√§hlten Bl√∂cke neu benennen?`)) {
                        startRenamingProcess(vehiclesToProcess, buildingCache);
                    }
                }
            }, {
                label: 'Schlie√üen',
                className: 'btn-close',
                callback: () => document.body.removeChild(document.getElementById('ng-modal-overlay'))
            }];
            showModal({ title: 'Namensgenerator Kontrollzentrum', bodyElement: bodyElement, actions: actions });
        } catch (error) {
            showModal({ title: 'Fehler', body: `Ein Fehler ist aufgetreten:\n${error.message}` });
        }
    }
    async function startRenamingProcess(vehicles, buildingCache) { const startTime = Date.now(); showModal({ title: `Benennung l√§uft...`, body: '', progress: true, actions: [{ label:'Abbrechen', className:'btn-close', callback:()=> { vehicles.length = 0; document.body.removeChild(document.getElementById('ng-modal-overlay')); } }] }); const progressBar = document.getElementById('ng-progress-bar'); const progressText = document.getElementById('ng-progress-text'); const logArea = document.getElementById('ng-log-area'); logArea.value = 'Initialisiere...\n'; try { const firstVehicleId = vehicles[0]?.id; if (!firstVehicleId) { throw new Error("Konnte keine g√ºltige Fahrzeug-ID f√ºr den Token-Abruf finden."); } const authToken = await gmFetch(`/vehicles/${firstVehicleId}/edit`).then(r => r.text()).then(html => new DOMParser().parseFromString(html, "text/html").querySelector('meta[name="csrf-token"]').getAttribute('content')); logArea.value += 'Sicherheitstoken erfolgreich erhalten. Starte Batch-Verarbeitung...\n'; const usedNames = new Set(); const jobList = vehicles.map(v => { const moduleKey = vehicleTypeToModuleMap[v.vehicle_type]; if (!moduleKey) return null; const config = MODULE_CONFIG[moduleKey]; let spitzname; let attempts = 0; do { spitzname = config.nameGenerator(config.largeVehicleIds && config.largeVehicleIds.includes(v.vehicle_type)); attempts++; } while (usedNames.has(spitzname) && attempts < 20); usedNames.add(spitzname); const stationName = buildingCache[v.building_id] || "Unbekannte Wache"; const vehicleType = config.targetVehicleTypes[v.vehicle_type]; const newCaption = `${vehicleType} ${spitzname} [${stationName}]${MARKER}`; return { id: v.id, newCaption: newCaption, oldCaption: v.caption }; }).filter(Boolean); let processedCount = 0; let successCount = 0; let errorCount = 0; const performanceLog = []; for (let i = 0; i < jobList.length; i += BATCH_SIZE) { if (vehicles.length === 0) { logArea.value += `\n\nProzess vom Benutzer abgebrochen.`; break; } const batch = jobList.slice(i, i + BATCH_SIZE); logArea.value += `\nVerarbeite Paket ${Math.ceil((i + 1) / BATCH_SIZE)} / ${Math.ceil(jobList.length / BATCH_SIZE)}...\n`; await Promise.allSettled(batch.map(job => { const formData = new URLSearchParams(); formData.append('utf8', '‚úì'); formData.append('_method', 'patch'); formData.append('authenticity_token', authToken); formData.append('vehicle[caption]', job.newCaption); return gmFetch(`/vehicles/${job.id}`, { method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: formData.toString() }).then(response => { if (response.ok) { successCount++; } else { errorCount++; } logArea.value += `${response.ok ? 'OK' : 'FEHLER'}: "${job.oldCaption}" -> "${job.newCaption.slice(0,-1)}"\n`; }).catch(e => { errorCount++; logArea.value += `FEHLER bei "${job.oldCaption}": ${e.message}\n`; }).finally(() => { logArea.scrollTop = logArea.scrollHeight; }); })); processedCount += batch.length; performanceLog.push({ time: Date.now(), count: processedCount }); if (performanceLog.length > 5) { performanceLog.shift(); } let etaString = '--:--'; if (performanceLog.length > 1) { const first = performanceLog[0]; const last = performanceLog[performanceLog.length - 1]; const processedInWindow = last.count - first.count; const timeInWindow = last.time - first.time; if (timeInWindow > 100) { const itemsPerSecond = processedInWindow / (timeInWindow / 1000); const remainingItems = jobList.length - processedCount; if (itemsPerSecond > 0) { const remainingTimeInSeconds = remainingItems / itemsPerSecond; etaString = formatTime(remainingTimeInSeconds); } } } const progress = (processedCount / jobList.length) * 100; progressBar.style.width = `${progress}%`; progressText.textContent = `${processedCount} / ${jobList.length} | ETA: ${etaString}`; } const totalTime = formatTime((Date.now() - startTime) / 1000); progressBar.style.backgroundColor = '#28a745'; progressText.textContent = `Verarbeitung abgeschlossen!`; logArea.value += `\nProzess beendet nach ${totalTime}. Erfolgreich: ${successCount}, Fehler: ${errorCount}.\n`; logArea.scrollTop = logArea.scrollHeight; } catch (error) { logArea.value += `\nEin schwerwiegender Fehler ist aufgetreten: ${error.message}\nProzess abgebrochen.`; if (document.getElementById('ng-progress-bar')) document.getElementById('ng-progress-bar').style.backgroundColor = '#dc3545'; } }
    function showModal(config){const oldOverlay=document.getElementById('ng-modal-overlay');if(oldOverlay)document.body.removeChild(oldOverlay);const overlay=document.createElement('div');overlay.id='ng-modal-overlay';const modalContent=document.createElement('div');modalContent.id='ng-modal-content';modalContent.innerHTML=`<h3>${config.title}</h3>`;const modalBody=document.createElement('div');modalBody.id='ng-modal-body';if(config.bodyElement){modalBody.appendChild(config.bodyElement)}else if(config.body){modalBody.innerHTML=config.body}modalContent.appendChild(modalBody);if(config.progress){const progressArea=document.createElement('div');progressArea.innerHTML=`<div id="ng-progress-bar-container"><div id="ng-progress-bar"></div></div><div id="ng-progress-text">Initialisiere...</div><textarea id="ng-log-area" readonly></textarea>`;modalContent.appendChild(progressArea)}const buttonContainer=document.createElement('div');buttonContainer.id='ng-modal-buttons';if(config.actions){config.actions.forEach(action=>{const button=document.createElement('button');button.className=`ng-modal-btn ${action.className||''}`;button.textContent=action.label;button.addEventListener('click',action.callback);buttonContainer.appendChild(button)})}modalContent.appendChild(buttonContainer);overlay.appendChild(modalContent);document.body.appendChild(overlay);return{overlay,modalContent}}
    function gmFetch(url,options={}){return new Promise((resolve,reject)=>{GM_xmlhttpRequest({method:options.method||'GET',url:`https://www.leitstellenspiel.de${url}`,headers:options.headers||{},data:options.body,timeout:15000,onload:(response)=>{if(response.status>=200&&response.status<300){response.ok=true;response.text=()=>Promise.resolve(response.responseText);resolve(response)}else{reject(new Error(`Server-Fehler: Status ${response.status}`))}},onerror:(error)=>reject(new Error('Netzwerk- oder Skript-Konflikt-Fehler.')),ontimeout:()=>reject(new Error('Zeit√ºberschreitung der Anfrage.'))})})}
    const addGeneratorButton=()=>{const settingsLink=document.querySelector('a.lightbox-open[href="/settings/index"]');if(!settingsLink)return;const settingsListItem=settingsLink.closest('li');if(!settingsListItem)return;const mainMenu=settingsListItem.parentElement;if(!mainMenu||document.getElementById('main-naming-button')){if(mainMenu){observer.disconnect()}return}const newListItem=document.createElement('li');newListItem.setAttribute('role','presentation');const mainButton=document.createElement('a');mainButton.href="#";mainButton.id='main-naming-button';mainButton.innerHTML=`<span style="font-size: 20px; vertical-align: -3px; margin-right: 5px; display: inline-block;">üè∑Ô∏è</span> Fahrzeug-Namen-Generator`;mainButton.style.cursor="pointer";mainButton.addEventListener('click',(e)=>{e.preventDefault();showBlockControlPanel()});settingsListItem.insertAdjacentElement('afterend',newListItem);newListItem.appendChild(mainButton);observer.disconnect()};
    const observer = new MutationObserver(addGeneratorButton);
    observer.observe(document.body, { childList: true, subtree: true });
    addGeneratorButton();

})();
